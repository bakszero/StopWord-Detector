स्प्रेडशीट

स्प्रेडशीट एक कंप्यूटर अनुप्रयोग है जो कार्यपत्रक का हिसाब करने वाले एक कागज़ की नकल है। यह कई कक्षों को प्रदर्शित करता है जो एकसाथ मिलकर एक जाल बनाते हैं जिनमें पंक्तियां और स्तंभ शामिल होते हैं, प्रत्येक कक्ष में अल्फ़ान्यूमेरिक पाठ, संख्यात्मक मूल्य, या सूत्र शामिल होते हैं। एक सूत्र यह परिभाषित करता है कि उस कक्ष की अंतर्वस्तु की किसी अन्य कक्ष (या कक्षों के संयोजन) की अंतर्वस्तु से, जब भी कोई कक्ष अद्यतन किया जाता है तो कैसे गणना की जा सकती है। स्प्रेडशीट का इस्तेमाल वित्तीय जानकारी के लिए अक्सर किया जाता है इसका कारण है एक एकल कक्ष में बदले जाने के बाद भी संपूर्ण पत्रक की स्वतः ही पुन: गणना कर लेने की क्षमता.

Visicalc (वीसीकैल्क) को प्रथम इलेक्ट्रॉनिक स्प्रेडशीट माना जाता है (हालांकि इसे चुनौती दी गई है) और इसने Apple II (एप्पल II) कंप्यूटर की सफलता में योगदान किया और उनके बड़े पैमाने पर फैले अनुप्रयोगों में भी सहायता की. Lotus 1-2-3 एक अग्रणी स्प्रेडशीट थी, तब जब DOS प्रमुख ऑपरेटिंग सिस्टम हुआ करता था। अब Windows और Macintosh के प्लेटफॉर्म पर Excel का हिस्सा बाज़ार में सर्वाधिक है।

"स्प्रेडशीट" शब्द "स्प्रेड" से आया है जो एक अखबार या पत्रिका की वस्तु (टेक्स्ट/या ग्राफिक्स) के भाव से लिया गया है जिसमें दो पृष्ठ आमने-सामने शामिल होते हैं, जो मध्य के मोड़ से दोनो ओर फैली हुई होती है और दोनों ही पृष्ठों को एक बड़ा पृष्ठ माना जाता है। मिश्रित शब्द "स्प्रेड-शीट" उस प्रारूप के अर्थ के रूप में सामने आया है जो बहीखाता खातों के प्रस्तुत करने में उपयोगी होता है - जिसमें ऊपरी भाग के आर पार व्यय की श्रेणियों के लिए कॉलम बने होते हैं, बाएं मार्जिन के नीचे चालानों को सूचीबद्ध किया जाता है और प्रत्येक भुगतान की राशि को उन कक्षों में डाला जाता है जहां इसके स्तंभ और पंक्तियां प्रतिच्छेद करती हैं - जो पारंपरिक रूप से जिल्दबंद खाते के दो आमने-सामने के पृष्ठों के आर-पार "फैली" हुई होती है (लेखांकन रिकॉर्ड रखने के लिए पुस्तक) या वृहदाकार कागज के शीटों पर जो धारियों द्वारा पंक्तियों और स्तंभों में ऊसी प्रारूप में और सामान्य कागजों से लगभग दोगुनी व्यापक होती है।

एक बैच 'स्प्रेडशीट' एक जोड़े गए इनपुट डेटा के साथ एक बैच संकलक से अप्रभेद्य है, जो एक आउटपुट रिपोर्ट उत्पादित करता है (जो है एक 4GL या पारंपरिक, परस्पर संवादात्मक, बैच कंप्यूट कार्यक्रम). यद्यपि, इलेक्ट्रानिक स्प्रेडशीट की यह अवधारणा रिचर्ड मातेसिच द्वारा 1961 के पेपर "बजेटिंग मॉडल एंड सिस्टम सिम्युलेशन" में उल्लिखित किया गया. मातेसिच द्वारा उत्तरवर्ती कार्य (1964a, Chpt. 9, "एकाउंटिंग एंड एनालिटिकल मेथड्स)" और उसके साथी संस्करण, मातेसिच (1964b, "सिमुलेशन ऑफ़ द फर्म थ्रू अ बजेट कंप्यूटर प्रोग्राम)" लेखांकन और बजट प्रणालियों के लिए अनुप्रयुक्त कम्प्यूटरीकृत स्प्रेडशीट (FORTRAN IV में क्रमादेशित मेनफ्रेम कंप्यूटर पर). यह बैच स्प्रेडशीटें मुख्य रूप से संपूर्ण स्तंभों या पंक्तियों (इनपुट वैरिएबल्स के) के जोड़ या घटाव से संबद्ध थी और ना की व्यक्तिगत 'सेलों' से.

1962 में स्प्रेडशीट की यह अवधारणा (जिसे बिज़नेस कम्प्यूटर लैंग्वेज कहा जाता है) को IBM 1130 में लागू किया गया और 1963 में मार्क्वेट यूनिवर्सिटी, विसकोनसिन में आर ब्रायन वॉल्श द्वारा IBM 7040 में पोर्ट किया गया. यह प्रोग्राम फोरट्रान में लिखा गया था। उन मशीनों पर पूर्व टाइम शेयरिंग उपलब्ध था। 1968 में वॉल्श द्वारा वॉशिंगटन स्टेट यूनिवर्सिटी में BCL को IBM 360/67 टाइमशेयरिंग मशीन के साथ पोर्ट किया गया था। इसका उपयोग व्यापार के छात्रों को वित्तीय शिक्षा प्रदान करने में सहायक होता है। छात्र प्रोफेसर द्वारा तैयार जानकारी को ग्रहण कर सकते थे और उसे पुनः प्रस्तुत करने के लिए और अनुपात आदि दिखाने के लिए उसमें हेरफेर कर सकते थे। 1964 में किम्बेल, स्टोफेलस और वॉल्श द्वारा एक किताब लिखी गई जिसका नाम था "बिज़नेस कंप्यूटर लैंग्वेग" और यह पुस्तक और प्रोग्राम 1966 में, कॉपीराइट की गई और कई वर्षों बाद वह कॉपीराइट नवीकृत किया गया.
60 के दशक के पूर्वार्ध में Xerox अपने टाइम शेयरिंग प्रणाली के लिए एक अधिक परिष्कृत संस्करण को विकसित करने के लिए BOL का उपयोग किया।

इलेक्ट्रॉनिक स्प्रेडशीट के विकास में महत्वपूर्ण आविष्कार रेने के. पार्डो और रेमी लंडाऊ द्वारा किया गया, जिन्होंने 1970 में स्प्रेडशीट स्वचालित स्वाभाविक क्रम पुनर्गणना एल्गोरिथ्म 1971 में दर्ज किया। जबकि पेटेंट को शुरू में एक विशुद्ध गणितीय आविष्कार होने के कारण, 12 वर्षों की अपील के बाद, पेटेंट कार्यालय द्वारा अस्वीकार कर दिया गया, पार्डो और लंडाऊ ने CCPA (संघीय सर्किट का पूर्ववर्ती कोर्ट) में एक युगांतकारी मुकदमा जीता जिसने 1983 में पेटेंट कार्यालय के निर्णय को पलट दिया - और यह स्थापित किया कि "कोई चीज़ केवल इसलिए पेटेंट की योग्यता नहीं खो सकती क्योंकि नवीनता की बिंदु एक एल्गोरिथ्म में है।" हालांकि, 1995 में संघीय सर्किट के लिए अमेरिकी अपीली कोर्ट ने इस पेटेंट को अप्रवर्तनीय घोषित किया। .

वास्तविक सॉफ्टवेयर को LANPAR कहा गया - लेंग्वेज फॉर प्रोग्रामिंग ऐरेज़ एट रैंडम. इसकी कल्पना और विकास, हार्वर्ड विश्वविद्यालय से पार्डो और लंडाऊ के हाल ही में स्नातक की पढ़ाई समाप्त करने के बाद पूरी तरह से 1969 की गर्मियों में की गई। सह-आविष्कारक रेने पार्डो याद करते हैं कि उन्होंने महसूस किया कि बेल कनाडा के एक प्रबंधक को बजट प्रपत्रों को बनाने और संशोधित करने के लिए प्रोग्रामर पर निर्भर नहीं रहना चाहिए और उन्होंने उपयोगकर्ताओं द्वारा प्रपत्र को किसी भी क्रम में टाइप करने की कल्पना की जिसके परिणामों की गणना कंप्यूटर सही क्रम में करेगा. इस सॉफ्टवेयर को 1969 में विकसित किया गया. 

LANPAR का इस्तेमाल बेल कनाडा (Bell Canada), एटी एंड टी (AT&T) और 18 ऑपरेटिंग टेल्को द्वारा अपने स्थानीय और राष्ट्रीय बजट संचालन के लिए पूरे देश में किया गया. LANPAR का प्रयोग जनरल मोटर्स द्वारा भी किया जाता था। इसकी अद्वितीयता, इसके स्वाभाविक क्रम पुनर्गणना में थी, जो वीसीकैल्क (Visicalc), सुपरकैल्क (Supercalc) और मल्टीप्लान (Multiplan) के प्रथम संस्करण के विपरीत था जो प्रत्येक खंड में परिणामों की गणना करने के लिए बाएं-से-दाएं, ऊपर से नीचे क्रम का इस्तेमाल करते थे। स्वाभाविक क्रम पुनर्गणना के बिना उपयोगकर्ताओं को स्प्रेडशीट की पुनर्गणना हस्तचालित रूप से आवश्यकता के अनुसार बार-बार करनी होगी जब तक कि सभी खानों के मानों का बदलना बंद ना हो जाए.

LANPAR प्रणाली को, GE400 और हनीवेल 6000 ऑनलाइन टाइमशेयरिंग सिस्टम पर लागू किया गया जिससे उपयोगकर्ता, कंप्यूटर टर्मिनलों और मॉडेम के माध्यम से प्रोग्राम बनाने में सक्षम हो गए। डेटा को गतिशील रूप से प्रवेश किया जा सकता है या तो पेपर टेप, विशिष्ट फ़ाइल अभिगम, ऑनलाइन द्वारा या फिर बाह्य डेटा आधारों के द्वारा भी. परिष्कृत गणितीय अभिव्यक्ति, जिसमें शामिल है तार्किक तुलना और "इफ/देन" (यदि/तो) बयान को किसी भी खाने में इस्तेमाल किया जा सकता है और खानों को किसी भी क्रम में प्रस्तुत किया जा सकता है।

1968 में, फीनिक्स, एरिजोना में मुख्यालय वाली जनरल इलेक्ट्रिक कंप्यूटर कंपनी के तीन पूर्व कर्मचारी अपना स्वयं का सॉफ्टवेयर विकास केंद्र खोलने के लिए निकले. ए. लेरॉय एलिसन, हैरी एन. कांत्रेल और रसेल ई. एडवर्ड्स ने पाया कि व्यापार योजना के लिए सारणी बनाते समय उन्हें बड़ी संख्या में परिकलन करना पड़ता है जिसे वे उद्यम पूंजीपतियों के लिए पेश करते हैं। उन्होंने इस काम में लगने वाले अपने श्रम को कम करने का फैसला किया और एक कंप्यूटर प्रोग्राम लिखा जिसने उनके लिए उनकी तालिकाओं को उत्पन्न किया। यह कार्यक्रम, जिसे उन्होंने मूल रूप से अपने व्यक्तिगत उपयोगिता के लिए निर्मित किया था, कंपनी द्वारा पेश किया गया पहला सॉफ्टवेयर उत्पाद था जो केपेक्स कॉर्पोरेशन के नाम से जाना गया. "ऑटोप्लान" GE की टाइमशेयरिंग सेवा पर चलता था; इसके बाद, एक संस्करण को पेश किया गया जो IBM मेनफ्रेम पर चलता था, इसका नाम था "ऑटोटैब". (नैशनल CSS ने ऐसा ही समान उत्पाद पेश किया, CSSTAB, जिसमें 70 के दशक के आरम्भ में मध्यम टाइमशेयरिंग प्रयोक्ता आधार था। एक प्रमुख अनुप्रयोग था विचार अनुसंधान सारणीयन.) ऑटोप्लान/ऑटोटैब, WYSIWYG इंटरैक्टिव स्प्रेडशीट प्रोग्राम नहीं था, यह स्प्रेडशीट के लिए सरल स्क्रीप्टिंग भाषा थी। उपयोगकर्ता, पंक्तियों और स्तंभों के लिए नाम और लेबल को परिभाषित करता था, फिर सूत्रों को जो प्रत्येक पंक्ति या स्तंभ को परिभाषित करते थे।

आरंभिक "औद्योगिक वजन" स्प्रेडशीट का एक उदाहरण है APLDOT, जिसे 1976 में अमेरिकी रेलवे संघ में IBM 360/91 पर विकसित किया गया, जो लॉरेल, MD में द जॉन्स हॉपकिन्स विश्वविद्यालय एप्लाइड फिजिक्स लेबोरेटरी में चल रहा था। इस अनुप्रयोग का उपयोग कई वर्षों तक विभिन्न अनुप्रयोगों के विकास के लिए सफलतापूर्वक किया गया, जैसे अमेरिकी कांग्रेस और कॉनरेल के लिए वित्तीय और लागत मॉडल. APLDOT को "स्प्रेडशीट" करार दिया गया क्योंकि वित्तीय विश्लेषकों और रणनीतिक नियोजकों ने इसका इस्तेमाल उन्ही समस्याओं के समाधान के लिए किया जिनका हल वे कागज के स्प्रेडशीट पैड से करते थे।

स्प्रेडशीट अवधारणा, डैन ब्रिक्लिन और बॉब फ्रेंक्स्टन द्वारा VisiCalc के कार्यान्वयन के चलते 1970 के दशक के उत्तरार्ध और 1980 के दशक के पूर्वार्ध में व्यापक रूप से जानी गई। VisiCalc पहली स्प्रेडशीट थी जिसने आधुनिक स्प्रेडशीट के सभी अनुप्रयोगों की सभी आवश्यक सुविधाओं को शामिल किया, जैसे WYSIWYG इंटरैक्टिव उपयोगकर्ता इंटरफ़ेस, स्वत: पुनर्गणना, स्टेटस और फॉर्मूला लाइनें, सापेक्ष और निरपेक्ष सन्दर्भों के साथ रेंज प्रतिलिपिकरण, सन्दर्भित खाने का चयन करते हुए सूत्र निर्माण. PC वर्ल्ड मैगजीन ने VisiCalc को प्रथम इलेक्ट्रॉनिक स्प्रेडशीट कहा.

ब्रिक्लिन ने अपने विश्वविद्यालय के प्रोफेसर को एक ब्लैकबोर्ड पर गणना परिणामों की एक सारणी बनाते हुए देखने की बात कही. जब प्रोफेसर को एक त्रुटि मिली, तो उन्हें बड़ी मेहनत से उस सारणी में कई प्रविष्टियों को मिटाते हुए क्रम में पुनः लिखना पड़ा, जिसने ब्रिक्लिन को यह सोचने के लिए प्रेरित किया कि वह कंप्यूटर पर इस प्रक्रिया को दोहरा सकता है, जहां अंतर्निहित सूत्र के परिणाम को देखने के लिए वह ब्लैकबोर्ड को एक मॉडल के रूप में उपयोग कर सकता है। उसकी कल्पना VisiCalc के रूप में चरितार्थ हुई, वह प्रथम अनुप्रयोग जिसने पर्सनल कंप्यूटर को, कंप्यूटर उत्साहियों के लिए एक शौक से बदल कर एक व्यापारिक उपकरण बना दिया. 

VisiCalc पहला "किलर ऐप बना, एक अनुप्रयोग जो इतना सम्मोहक था, कि जिसे हासिल करने के लिए लोग विशिष्ट कंप्यूटर खरीदने लगे. इस मामले में कंप्यूटर था Apple II (एप्पल II) और VisiCalc ने उस मशीन की सफलता में महत्वपूर्ण योगदान दिया. इस प्रोग्राम को कई अन्य आरंभिक कंप्यूटरों में भेजा गया, विशेष रूप से CP/M मशीन, अटारी 8-बिट फैमिली और विभिन्न कमोडोर प्लेटफार्मों पर. फिर भी, VisiCalc को "एक Apple II प्रोग्राम" के रूप में अधिक जाना जाता है।

अगस्त 1981 में इसकी पेशकश के बाद IBM PC की स्वीकृति, धीरे-धीरे शुरू हुई, क्योंकि इसके लिए उपलब्ध अधिकांश प्रोग्राम, अन्य 8-बिट प्लेटफार्मों से पोर्ट थे। नवम्बर 1982 में लोटस 1-2-3 के शुभारम्भ और जनवरी में बिक्री के लिए जारी होने के बाद हालात नाटकीय रूप से बदले. यह उस प्लेटफोर्म के लिए किलर ऐप बन गया और VisiCalc की तुलना में गति और ग्राफिक्स में सुधार की वजह से PC की बिक्री को बढ़ा दिया.

अपने प्रतिद्वंद्वी बोरलैंड क्वाट्रो के साथ, लोटस 1-2-3 ने जल्द ही VisiCalc को विस्थापित कर दिया. लोटस 1-2-3 को 26 जनवरी 1983 को जारी किया गया और बिक्री में यह उस वक्त के सबसे लोकप्रिय VisiCalc से उसी वर्ष आगे निकल गया और कई साल तक DOS के लिए यह अग्रणी स्प्रेडशीट था।

इस बिंदु पर माइक्रोसॉफ़्ट, कई वर्षों से मैकिनटॉश प्लेटफोर्म पर एक्सेल (Excel) को विकसित कर रहा था, जहां यह एक शक्तिशाली सिस्टम बन चुका था। Windows 2.0 में Excel के एक पोर्ट ने एक पूरी तरह कार्यात्मक विंडोज स्प्रेडशीट को फलित किया। 1990 के दशक के अधिक मजबूत Windows 3.x प्लेटफार्म ने बाज़ार में लोटस से हिस्सेदारी हथियाने को संभव बनाया. उस वक्त तक, जब लोटस ने विंडोज के उपयोगी उत्पादों द्वारा जवाब दिया, माइक्रोसॉफ़्ट ने अपने ऑफिस सुइट का संकलन शुरू कर दिया था। 1990 के दशक के मध्य में प्रारंभ होते हुए, जो आज तक जारी है, माइक्रोसॉफ़्ट ऍक्सल ने वाणिज्यिक इलेक्ट्रॉनिक स्प्रेडशीट बाजार पर दबाव बनाए रखा है।

Numbers, एप्पल इंक का स्प्रेडशीट सॉफ्टवेयर है, जो iWork का हिस्सा है. यह चार्ट प्रस्तुति की उपयोगिता और भव्यता पर केंद्रित है। Numbers ने Apple की उत्पादकता सुइट को पूरा किया और इसे माइक्रोसॉफ्ट ऑफिस के लिए एक व्यवहार्य प्रतियोगी बना दिया. इसमें चार्ट और पिवट टेबल सुविधाओं का अभाव है।

OpenOffice.org Calc मुफ्त उपलब्ध, ओपन-स्रोत प्रोग्राम है जो माइक्रोसॉफ़्ट ऍक्सल की तर्ज़ पर निर्मित है। Calc, Excel (XLS) फ़ाइल फॉर्मेट में खुल भी सकता है और रक्षित भी हो सकता है। . Calc को दोनों रूपों में हासिल किया जा सकता है, एक अधिष्ठापन फाइल और एक पोर्टेबल कार्यक्रम के रूप में, जो USB मेमोरी ड्राइव जैसे उपकरण से चलाये जाने में सक्षम होता है। इसे OpenOffice.org वेबसाइट से डाउनलोड किया जा सकता है।

Gnumeric, एक मुफ्त स्प्रेडशीट प्रोग्राम है जो GNOME फ्री सॉफ्टवेयर डेस्कटॉप प्रोजेक्ट का हिस्सा है और इसमें Windows प्रतिस्थापक उपलब्ध है। इसे स्वामित्व वाले स्प्रेडशीट प्रोग्राम के लिए एक मुफ्त प्रतिस्थापन के रूप में निर्मित किया गया है जैसे माइक्रोसॉफ़्ट ऍक्सल, जिससे यह मोटे तौर पर और खुले आम प्रतिस्पर्धा करता है। Gnumeric को मिगेल डे इकाज़ा द्वारा निर्मित और विकसित किया गया और वर्तमान देख-रेख करने वाले जोडी गोल्डवर्ग हैं। 

Gnumeric में विभिन्न फ़ाइल फॉर्मेट से डेटा आयात और निर्यात करने की क्षमता है, जिसमें शामिल है CSV, माइक्रोसॉफ़्ट ऍक्सल, HTML, LaTeX, Lotus 1-2-3, OpenDocument और Quattro Pro; इसका मूल फॉर्मेट है "जीन्युमरिक फ़ाइल फॉर्मेट" (.gnm या .gnumeric), एक gzip से संपीड़ित XML फ़ाइल. इसमें माइक्रोसॉफ़्ट ऍक्सल के दक्षिण अमेरिकी संस्करण के स्प्रेडशीट की सुविधाएं शामिल हैं और कई अन्य सुविधाएं जो Gnumeric में अनूठी हैं। पिवट टेबल और नियमबद्ध स्वरूपण की अभी सुविधा नहीं है लेकिन भविष्य संस्करणों के लिए इसकी योजना बनाई गई है। Gnumeric की सटीकता ने इसे सांख्यिकीय विश्लेषण और अन्य वैज्ञानिक कार्यों के लिए इसका इस्तेमाल करने वाले लोगों के बीच एक ख़ास जगह बनाने में मदद की. Gnumeric की सटीकता में सुधार करने के लिए, विकासकर्ता, आर प्रोजेक्ट (अनुसंधान परियोजना) के साथ सहयोग कर रहे हैं।

उन्नत वेब तकनीकों के आगमन के साथ, जैसे Ajax लगभग 2005, ऑनलाइन स्प्रेडशीट्स की एक नई पीढ़ी का आगाज़ हुआ। एक रिच इंटरनेट अनुप्रयोग, प्रयोक्ता अनुभव से लैस, सर्वश्रेष्ट वेब आधारित ऑनलाइन स्प्रेडशीट में ऐसी कई सुविधाएं थीं जिन्हें डेस्कटॉप स्प्रेडशीट अनुप्रयोग में देखा गया था। उनमें से कुछ में मजबूत बहु-उपयोक्ता सहयोग विशेषताएं थीं।
उनमें से कुछ दूरस्थ स्रोतों से वास्तविक समय अद्यतन प्रदान करते थे जैसे शेयर मूल्य और मुद्रा विनिमय दर.


कई कंपनियों ने, बिल्कुल भिन्न प्रतिमान पर आधारित प्रोग्राम के साथ स्प्रेडशीट बाजार में दाखिल होने का प्रयास किया। उदाहरण के लिए Lotus ने एक प्रोग्राम शुरू किया जो सबसे अधिक सफल हुआ, Lotus Improv, जिसे कुछ व्यावसायिक सफलता मिली, विशेष रूप से वित्तीय दुनिया में जहां आज भी इसकी शक्तिशाली डेटा खनन क्षमताओं का सम्मान किया जाता है। स्प्रेडशीट 2000 ने सूत्र निर्माण को नाटकीय रूप से सरल करने का प्रयास किया, लेकिन आम तौर पर सफल नहीं रहा.

एक "खाने" को एक बॉक्स के रूप में माना जा सकता है जिसमें एक आंकड़ा होता है। एक एकल खाने को आमतौर पर इसके स्तंभ और पंक्ति से सन्दर्भित किया जाता है (A2, मान 10 को लिए हुए नीचे के खाने को दर्शाएगा). सामग्री के अनुसार इसके आकार को बदलने के लिए आमतौर पर इसकी लम्बाई या चौड़ाई को मिलन रेखाओं को खींच कर किया जा सकता है बॉक्स (या संपूर्ण स्तंभ या पंक्ति के लिए स्तंभ या पंक्तियों के हेडर को खींचकर).

खानों की व्यूह रचना को "शीट" या "कार्यपत्रक" कहा जाता है। पारंपरिक कंप्यूटर प्रोग्राम में यह चर की एक व्यूह रचना के अनुरूप है (हालांकि कुछ अपरिवर्तनीय मान, एक बार प्रवेश किये जाने पर, समान सादृश्य द्वारा स्थिर माना जा सकता है). अधिकांश प्रयोगों में, कई कार्यपत्रक को एक एकल स्प्रेडशीट के भीतर रखा जा सकता है। एक कार्यपत्रक, बस एक स्प्रेडशीट का उपखंड है जिसे स्पष्टता के लिए विभाजित किया गया है। कार्यात्मक रूप से, एक स्प्रेडशीट सम्पूर्णता में संचालित होती है और स्प्रेडशीट के भीतर सभी खाने वैश्विक चर के रूप में संचालित होते हैं (केवल 'रीड' अभिगम, अपने खाने को छोड़कर).

एक सेल में एक मान या एक सूत्र हो सकता है या इसे बस खाली भी छोड़ सकते हैं।
परम्परा के अनुसार, सूत्र आमतौर पर = संकेत के साथ शुरू होते हैं।

एक मान को कंप्यूटर कीबोर्ड से दर्ज किया जा सकता है या सीधे एक खाने में टाइप किया जा सकता है। वैकल्पिक रूप से, एक मान किसी सूत्र पर आधारित हो सकता है (नीचे देखें), जो एक परिकलन कर सकता है, वर्तमान दिनांक या समय दिखा सकता है, एक बाह्य डेटा को प्राप्त कर सकता है जैसे स्टॉक कोट या डेटाबेस मूल्य.

स्प्रेडशीट "वैल्यू रुल (मान नियम" 

कंप्यूटर वैज्ञानिक एलन के ने एक स्प्रेडशीट की क्रियाओं को संक्षेपित करने के लिए "वैल्यू रुल" शब्द का प्रयोग किया: एक खाने का मान पूर्ण रूप से उस सूत्र पर निर्भर करता है जो उपयोगकर्ता ने उस खाने में टाइप किया है।
वह सूत्र, अन्य खानों के मान पर निर्भर हो सकता है, लेकिन वे खाने उसी प्रकार उपयोगकर्ता-प्रवेशित डेटा या सूत्र तक प्रतिबंधित होते हैं। सूत्र की गणना करने पर कोई 'पक्ष प्रभाव' नहीं है: एकमात्र आउटपुट, परिकलित परिणाम को प्रदर्शित करना है उसके अपने खाने में. स्थायी रूप से किसी खाने की सामग्री को संशोधित करने के लिए कोई स्वाभाविक क्रम तंत्र नहीं है, जब तक कि उपयोगकर्ता स्वयं खाने की सामग्री को हस्तचालित रूप से संशोधित ना करे. प्रोग्रामिंग भाषाओं के सन्दर्भ में, इससे प्रथम-क्रम कार्यात्मक प्रोग्रामिंग का एक सीमित रूप पैदा होता है।

80 के दशक के मध्य से स्प्रेडशीट का एक मानक , यह वैकल्पिक सुविधा, स्प्रेडशीट प्रोग्राम को मान की पुनर्गणना करने के लिए हस्तचालित रूप से अनुरोध करने की जरुरत को समाप्त करती है (आजकल आमतौर पर डिफ़ॉल्ट विकल्प जब तक कि विशेष रूप से बड़े स्प्रेडशीट के लिए 'स्विच ऑफ़', आमतौर पर प्रदर्शन सुधारने के लिए). कुछ आरंभिक स्प्रेडशीट्स में दुबारा गणना के लिए हस्तचालित अनुरोध आवश्यक था, क्योंकि बड़ी या जटिल स्प्रेडशीट की गणना, अक्सर डेटा प्रविष्टि गति को कम कर देती थी। कई आधुनिक स्प्रेडशीट्स अभी भी इस विकल्प को बरकरार रखे हुए है।

इस सुविधा के लिए एक सेल की सामग्री को समय-समय पर अद्यतन करना होता है, जब इसके मान को एक बाहरी स्रोत से लिया जाता है - जैसे एक अन्य "सुदूर" स्प्रेडशीट में एक खाना. साझा और वेब-आधारित स्प्रेडशीट के लिए, यह "तत्काल" अद्यतन खाने पर लागू होता है जिसे किसी अन्य उपयोगकर्ता द्वारा बदला गया है। सभी निर्भर खानों को भी अद्यतन किया जाना होता है।

एक बार प्रवेश कर दिए जाने के बाद, चयनित खाने (या पूरी स्प्रेडशीट) को आकस्मिक पुनर्लेखन से बचाने के लिए वैकल्पिक रूप से "बंद" किया जा सकता है। आम तौर पर यह उन खानों पर लागू होता है जिसमें सूत्र होते हैं, लेकिन उन पर भी लागू हो सकता है जिसमें "स्थिरांक" होते हैं जैसे एक किलोग्राम/पाउंड रूपांतरण कारक (2.20462262 से लेकर आठ दशमलव स्थान). व्यक्तिगत खाने को बंद चिह्नित किये जाने के बावजूद, स्प्रेडशीट के आंकड़े तब तक सुरक्षित नहीं हैं जब तक इस सुविधा को फ़ाइल वरीयताओं में सक्रिय नहीं किया जाता.

एक खाने या श्रेणी को वैकल्पिक रूप से यह निर्दिष्ट करने के लिए परिभाषित किया जा सकता है कि मान कैसे प्रदर्शित होगा. डिफ़ॉल्ट डिस्प्ले फॉर्मेट आमतौर पर इसकी आरंभिक सामग्री द्वारा निर्धारित होता है, यदि इसे विशेष रूप से पहले से निर्धारित नहीं किया गया है, इसलिए उदाहरण के लिए "31/12/2007" या "31 जनवरी 2007" के लिए खाने के "तारीख" फॉर्मेट के डिफ़ॉल्ट होता है।
इसी प्रकार, एक संख्यात्मक मान के बाद एक % संकेत जोड़ने से वह खाना प्रतिशत सेल फॉर्मेट के रूप में टैग होगा. खाने की सामग्री इस प्रारूप से परिवर्तित नहीं होगी, केवल प्रदर्शित मान बदलेगा.

खाने के कुछ फॉर्मेट जैसे कि "संख्यात्मक" या "मुद्रा" भी दशमलव स्थान की संख्या को निर्दिष्ट कर सकते हैं।"

इससे अवैध संचालन की अनुमति मिल सकती (जैसे एक तारीख वाले कक्ष में गुणा करना), जिससे बिना किसी उचित चेतावनी के विसंगत परिणाम फलित होते हैं।

स्प्रेडशीट अनुप्रयोग की क्षमता पर निर्भर करते हुए, प्रत्येक कक्ष (जैसे अपने समकक्ष की तरह वर्ड प्रोसेसर में "स्टाइल") को पृथक रूप से स्वरूपित किया जा सकता है जिसके लिए या तो सामग्री (बिंदु आकार, रंग, बोल्ड या इटैलिक) का उपयोग किया जा सकता है या कक्ष का (सीमा रेखा की मोटाई, पृष्ठभूमि छायाप्रभाव, रंग). एक स्प्रेडशीट की पठनीयता में वृद्धि करने के लिए, कक्ष स्वरूपण को सशर्त डेटा पर लागू किया जा सकता है - उदाहरण के लिए, एक ऋणात्मक संख्या को लाल रंग में प्रदर्शित किया जा सकता है।

एक कक्ष का स्वरूपण आम तौर पर इसकी सामग्री को प्रभावित नहीं करता और इस बात पर निर्भर करते हुए कि कक्षों को अन्य कार्यपत्रक या अनुप्रयोगों पर कैसे सन्दर्भित या कॉपी किया गया है, स्वरूपण को सामग्री के साथ किया और नहीं भी किया जा सकता है।

अधिकांश प्रयोगों में, एक कक्ष, या एक स्तंभ या पंक्ति में कक्षों के समूह का "नामकरण" किया जा सकता है जिससे उपयोगकर्ता उस कक्ष को ग्रिड सन्दर्भ के बजाय नाम द्वारा सन्दर्भित करने में सक्षम होता है। स्प्रेडशीट के भीतर नाम अद्वितीय होने चाहिए, लेकिन जब एक स्प्रेडशीट फ़ाइल में कई शीट का प्रयोग हो तो प्रत्येक शीट पर एक समान नामित कक्ष श्रेणी का उपयोग किया जा सकता है अगर इसे शीट नाम जोड़ कर पहचाना जाता है। इस प्रयोग के लिए एक कारण है मैक्रोज़ का निर्माण या परिचालन जो कई शीट में एक आदेश को दोहराता है। एक अन्य कारण यह है कि नामित चरों वाले सूत्रों को उनके द्वारा लागू किये जाने वाले बीजगणित के खिलाफ तत्परता से जांचा जाता है (वे फोरट्रान अभिव्यक्ति से मेल खाते हैं). नामित चरों और नामित क्रियाओं का प्रयोग, स्प्रेडशीट संरचना को अधिक पारदर्शी भी बनाता है।

किसी नामित कक्ष के स्थान पर, एक वैकल्पिक दृष्टिकोण है कक्ष सन्दर्भ (या ग्रिड) का प्रयोग. अधिकांश कक्ष सन्दर्भ, समान स्प्रेडशीट में एक अन्य कक्ष का संकेत देते हैं, लेकिन एक कक्ष सन्दर्भ एक समान स्प्रेडशीट के भीतर एक अलग कक्ष को सन्दर्भित कर सकता है, या (कार्यान्वयन के आधार पर) पूरी तरह से किसी अन्य स्प्रेडशीट में एक कक्ष को, या एक दूरस्थ अनुप्रयोग से किसी मान को.

"A1" शैली में एक ठेठ कक्ष सन्दर्भ, स्तंभ की पहचान करने के लिए एक या दो केस-सेंसिटिव अक्षरों से बना होता है (अगर वहां 256 तक स्तंभ हैं: A-Z or AA-IV) जिसके बाद पंक्ति की संख्या आती है (जैसे, 1-65536 श्रेणी में). दोनों में से कोई भी हिस्सा सापेक्ष हो सकता है (यह तब परिवर्तित होता है जब उस सूत्र को स्थानांतरित या कॉपी किया जाता है जिसमें वह मौजूद हो), या निरपेक्ष (कक्ष सन्दर्भ से संबंधित भाग के सामने $ के संकेत द्वारा इंगित). वैकल्पिक "R1C1" सन्दर्भ शैली R अक्षर, पंक्ति संख्या, C अक्षर और स्तंभ संख्या से बनी होती है; सापेक्ष पंक्ति या स्तंभ संख्या को वर्ग कोष्ठक में संख्या को घेर कर इंगित किया जाता है। सबसे हाल के स्प्रेडशीट A1 शैली का उपयोग करते हैं, जिनमें से कुछ एक संगतता विकल्प के रूप में R1C1 शैली प्रदान करते हैं।

जब कंप्यूटर एक कक्ष में उस कक्ष के प्रदर्शित मान को अद्यतन करने के लिए कोई सूत्र परिकलित करता है तो अन्य कक्ष को नामित करने वाले उस कक्ष में कक्ष सन्दर्भ, कंप्यूटर को नामित कक्ष के मान को लाने के लिए प्रेरित करते हैं।

समान "शीट" में एक कक्ष को आमतौर पर इस रूप में संबोधित किया जाता है:-

एक समान स्प्रेडशीट के एक अलग शीट पर एक कक्ष को आमतौर पर इस रूप में संबोधित किया जाता है: -

कुछ स्प्रेडशीट कार्यान्वयन, एक कक्ष सन्दर्भ को एक ही कंप्यूटर या एक स्थानीय नेटवर्क पर अन्य स्प्रेडशीट में अनुमति देते हैं (वर्तमान खुली और सक्रीय फ़ाइल नहीं). यह, एक ही कंप्यूटर या नेटवर्क पर किसी अन्य खुली और सक्रीय स्प्रेडशीट में एक कक्ष को सन्दर्भित कर सकता है जिसे साझा-योग्य के रूप में परिभाषित किया गया है। इन सन्दर्भों में पूरा फ़ाइल नाम होता है, जैसे: -

एक स्प्रेडशीट में, कक्षों के लिए सन्दर्भ स्वतः नवीनीकृत हो जाते हैं, जब नई पंक्तियों या स्तंभों को सम्मिलित या नष्ट किया जाता है।
लेकिन एक पंक्ति को एक स्तंभ योग के सामने जोड़ते समय ख़ास सावधानी बरतनी चाहिए ताकि यह सुनिश्चित हो कि योग में अतिरिक्त पंक्तियों का मूल्य प्रदर्शित हो रहा है - जो अक्सर नहीं होता है!

एक वृत्तिय सन्दर्भ तब होता है जब एक कक्ष के सूत्र में ऐसा सन्दर्भ होता है जो प्रत्यक्ष-या परोक्ष रूप से, सन्दर्भों की एक श्रृंखला के माध्यम से, प्रत्येक कक्ष अन्य कक्ष की ओर इशारा करता है जिसमें अगले कक्ष के लिए श्रृंखला पर सन्दर्भ है - एक कक्ष की ओर संकेत करता है।
त्रुटियों के कई आम प्रकार इस तरह के वृत्तिय सन्दर्भ को प्रेरित करते हैं।
हालांकि, ऐसी कुछ वैध तकनीकें हैं जो कि इस तरह के वृत्तिय सन्दर्भ का उपयोग कर रही हैं।
ऐसी तकनीकें, स्प्रेडशीट की कई पुनर्गणना के बाद (आमतौर पर) उन कक्षों के लिए सही मूल्यों पर अभिसरण करती हैं।

इसी तरह, कक्षों की नामांकित श्रेणी का उपयोग करने के बजाय, एक श्रेणी सन्दर्भ का इस्तेमाल किया जा सकता है। कक्षों की किसी श्रेणी के लिए सन्दर्भ, फार्म (A1:A6) के लिए आम है जो A6 के माध्यम से A1 श्रेणी में सभी कक्षों को निर्दिष्ट करता है। "= SUM (A1:A6)" जैसा एक सूत्र सभी निर्दिष्ट कक्षों को जोड़ सकता है और परिणाम को सूत्र वाले कक्ष में ही रखता है।

आरंभिक स्प्रेडशीट में, कक्ष एक सरल दो आयामी ग्रिड थे। समय के साथ, मॉडल को विस्तारित करते हुए एक तीसरे आयाम को भी शामिल किया गया और कुछ मामलों में नामित ग्रिड की एक श्रृंखला को, जिसे शीट्स कहा जाता है। सबसे उन्नत उदाहरण आवर्तन और व्युत्क्रम संचालनों की अनुमति डेटा है जो डेटा सेट को विभिन्न तरीकों से छांट कर प्रस्तुत कर सकता है।

एक सूत्र उस परिकलन की पहचान करता है जिसकी आवश्यकता परिणाम को उस कक्ष में रखने के लिए होती है जिसमें वह निहित होता है। एक सूत्र वाले कक्ष के प्रदर्शन में इसलिए दो घटक हैं; स्वयं वह सूत्र और परिणामस्वरूप मूल्य. वह सूत्र सामान्य रूप से तभी दिखाया जाता है जब उस कक्ष को माउस द्वारा "क्लिक" करके एक विशेष कक्ष को चुना जाता है, अन्यथा यह गणना के परिणाम को शामिल रखता है।

एक सूत्र किसी कक्ष या कक्षों की श्रृंखला के लिए मान देता है और आम तौर पर इसका प्रारूप है:

जहां अभिव्यक्ति में शामिल हैं:

जब किसी कक्ष में कोई सूत्र शामिल होता है, तो उसमें अक्सर अन्य कक्षों के लिए सन्दर्भ शामिल होता है। इस तरह का एक कक्ष सन्दर्भ चर का एक प्रकार है। इसका मान, सन्दर्भित कक्ष या इसकी किसी व्युत्पत्ति का मान है। यदि वह कक्ष बदले में किसी अन्य कक्ष को सन्दर्भित करता है, तो मान उनके मान पर निर्भर करता है। सन्दर्भ, सापेक्ष हो सकता है (जैसे codice_4, या codice_5), निरपेक्ष (जैसे, codice_16 या codice_17) या मिश्रित पंक्ति-वार या स्तंभ-वार निरपेक्ष/सापेक्ष (जैसे, codice_18 स्तंभ-वार निरपेक्ष है और codice_19 पंक्ति-वार निरपेक्ष है).

मान्य सूत्रों के लिए उपलब्ध विकल्प, विशेष स्प्रेडशीट कार्यान्वयन पर निर्भर करता है लेकिन, सामान्य रूप में, अधिकांश अंकगणितीय संक्रियाएं और काफी जटिल नेस्टेड सशर्त संक्रियाएं, आज की अधिकांश वाणिज्यिक स्प्रेडशीट्स द्वारा निष्पादित की जा सकती हैं। आधुनिक कार्यान्वयन, कस्टम-निर्मित क्रियाओं, दूरस्थ डेटा और अनुप्रयोगों के अभिगम के लिए भी संक्रियाएं पेश करते हैं। 

एक सूत्र में एक शर्त शामिल हो सकती है (या नेस्टेड शर्त) - वास्तविक परिकलन के बिना या साथ में - और इसका कभी-कभी पूरी तरह से इस्तेमाल त्रुटियों को उजागर करने और पहचान करने में होता है। नीचे दिए गए उदाहरण में, यह माना गया है कि प्रतिशत के स्तंभ (A1 से A6) के योग को वैधता के लिए जांचा जाता है और एक स्पष्ट संदेश को आसन्न दाईं तरफ के कक्ष में डाला जाता है। 

एक स्प्रेडशीट को किसी सूत्र को धारण करने की जरुरत नहीं होती और उस मामले में उसे पंक्तियों और स्तंभों में व्यवस्थित महज डेटा का एक संग्रह माना जाएगा (एक डेटाबेस) जैसे कि एक, कैलेंडर, समय सारिणी, या सरल सूची. उपयोग में इसकी आसानी, स्वरूपण और हाइपरलिंकिंग क्षमताओं के कारण कई स्प्रेडशीट्स को केवल इसी उद्देश्य के लिए इस्तेमाल किया जाता है।

स्प्रेडशीट में आमतौर पर कई आपूर्ति की गई क्रियाएं शामिल होती हैं, जैसे अंकगणित संक्रियाएं (उदाहरण के लिए, योग, औसत और अन्य) त्रिकोणमिति संक्रियाएं, सांख्यिकीय क्रियाएं और इसी तरह अन्य. इसके अलावा वहां अक्सर "प्रयोक्ता-परिभाषित क्रियाएं" के लिए एक प्रावधान है। माइक्रोसॉफ़्ट ऍक्सल में इन कार्यों को प्रदान किये गए Visual Basic एडिटर में Visual Basic के प्रयोग से परिभाषित किया गया है और ऐसी क्रियाएं कार्यपत्रक पर स्वतः ही अभिगम योग्य हैं। इसके अतिरिक्त, ऐसे प्रोग्राम को लिखा जा सकता है जो कार्यपत्रक से जानकारी खींचे, कुछ परिकलन करे और परिणामों को वापस कार्यपत्रक में सूचित करे. चित्र में, "sq" नाम प्रयोक्ता-प्रदत्त है और क्रिया "sq" को Excel के साथ प्रदान की किये गए "Visual Basic" के प्रयोग से पेश किया गया है। "नेम मैनेजर", नामित चर "x" और "y" की स्प्रेडशीट परिभाषाओं को प्रदर्शित करता है।

क्रियाएं खुद कार्यपत्रक में नहीं लिख सकती, बल्कि केवल अपना मूल्यांकन लौटाती हैं। हालांकि, माइक्रोसॉफ़्ट ऍक्सल में, सबरूटीन, सबरूटीन में पाए जाने वाले मान या टेक्स्ट को सीधे स्प्रेडशीट पर लिख सकता है। यह आंकड़ा, एक सबरूटीन के लिए Visual Basic कोड को दर्शाता है जिसमें नामित स्तंभ चर "x" के प्रत्येक सदस्य का नाम है, अपने वर्ग की गणना करता है और उस मान को नामित स्तंभ चर "y" के तत्‌स्थानी तत्व में लिखता है। "y" -स्तंभ में कोई सूत्र नहीं है क्योंकि इसके मान का परिकलन सबरूटीन में होता है, न कि स्प्रेडशीट पर और केवल अंदर लिखा जाता है।

जब भी एक कक्ष या कक्षों के समूह के लिए एक सन्दर्भ बनाया जाता है जो वर्तमान भौतिक स्प्रेडशीट फ़ाइल के भीतर स्थित नहीं हैं, तो इसे एक "दूरस्थ" स्प्रेडशीट के अभिगम के रूप में माना जाता है। सन्दर्भित कक्ष की सामग्री को एक मैनुअल अद्यतन के साथ प्रथम सन्दर्भ पर अभिगम किया जा सकता है या वेब आधारित स्प्रेडशीट्स के मामले में जैसा अभी हाल में हुआ, निर्दिष्ट स्वत:चालित रीफ्रेश अंतराल के साथ एक रिअल टाइम मान के रूप में. 

कई स्प्रेडशीट अनुप्रयोग, चार्ट, रेखांकन या हिस्टोग्राम की अनुमति देते है जिसे कक्ष के निर्दिष्ट समूहों से उत्पन्न किया जाता है जो कक्ष सामग्री के परिवर्तन के साथ गतिशील रूप से निर्मित होते हैं। उत्पन्न ग्राफ़िक घटक को या तो वर्तमान शीट में समाहित किया जा सकता है या एक अलग वस्तु के रूप में जोड़ा जा सकता है।

1980 के दशक के उत्तरार्ध और 1990 के दशक के पूर्वार्ध में, पहला Javelin Software और बाद में Lotus Improv सामने आए और पारंपरिक स्प्रेडशीट में एक मॉडल के विपरीत, वे उन मॉडल का उपयोग करते हैं जिन्हें चर कही जाने वाली वस्तु पर बनाया जाता है, न कि एक रिपोर्ट के कक्षों में निहित डेटा पर. इन बहु-आयामी स्प्रेडशीट ने डेटा और एल्गोरिथ्म को कई स्व-प्रलेखित रूपों में देखने में सक्षम बनाया, जिसमें शामिल है बहु-सिंक्रनाइज़ दृश्य. उदाहरण के लिए, Javelin के उपयोगकर्ता एक आरेख पर चरों के बीच एक कनेक्शन से होते हुए घूम सकते थे और साथ ही ऐसा करते हुए प्रत्येक चर की शाखाओं और तार्किक जड़ों को देख सकते थे। यह उदाहरण है आरंभिक Javelin के प्राथमिक योगदान का - जो थी इसके बारह दृश्यों के माध्यम से एक उपयोगकर्ता के तर्क या मॉडल संरचना की अनुमार्गणीयता की अवधारणा. एक जटिल मॉडल को विभाजित किया जा सकता है और दूसरों द्वारा समझा जा सकता है जिनका इसके निर्माण में कोई हाथ नहीं है और यह आज भी अद्वितीय बना हुआ है। Javelin का इस्तेमाल मुख्य रूप से वित्तीय मॉडलिंग के लिए किया गया था, लेकिन इसका प्रयोग कॉलेज के रसायन विज्ञान के पाठ्यक्रमों में अनुदेशात्मक मॉडल के निर्माण में, दुनिया की अर्थव्यवस्थाओं को स्वरूपित करने में और सेना द्वारा आरंभिक स्टार वार परियोजना में भी किया गया. यह आज भी उन संस्थाओं द्वारा प्रयोग किया जाता है जिनके लिए मॉडल अखंडता महत्वपूर्ण मिशन है।

इन कार्यक्रमों में, एक समय श्रृंखला, या कोई भी चर, अपने आप में एक लक्ष्य था, न कि कक्षों का संग्रह जो एक स्तंभ या पंक्ति में ही दिखाई देता है। चर की कई विशेषताएं हो सकती हैं, जिसमें शामिल हैं अन्य सभी चरों के साथ उनके संपर्क की पूरी जानकारी, डेटा सन्दर्भ और टेक्स्ट और छवि नोट. गणना को इन वस्तुओं पर संपादित किया गया, जो कक्षों की श्रेणी के विपरीत था, इसलिए दो समय श्रृंखला को जोड़ने से वे स्वचालित रूप से कैलेंडर समय में जुड़ जाते हैं, या एक प्रयोक्ता-परिभाषित समय सीमा में. डेटा, कार्यपत्रक-चर से स्वतंत्र थे और इसलिए डेटा को एक पंक्ति, स्तंभ या संपूर्ण कार्यपत्रक को मिटाने के द्वारा भी नष्ट नहीं किया जा सकता. उदाहरण के लिए, जनवरी की लागत को जनवरी के राजस्व में से घटाया जाता है, इससे कोई फर्क नहीं पड़ता कि दोनों कार्यपत्रक पर दिखते हैं या नहीं. इससे उन क्रियाओं की अनुमति मिलती है जिसे पिवट टेबल में इस्तेमाल किया गया था, सिवाय इसके कि रिपोर्ट सारिणी का लचीला हेर-फेर उन तमाम क्षमताओं में से एक था जो चर द्वारा समर्थित था। इसके अलावा, अगर लागत को सप्ताह के अनुसार और राजस्व को महीने के अनुसार दर्ज किया गया है, तो Javelin का प्रोग्राम सही दिशा में आवंटित या अंतर्वेशन कर सकता है। इस वस्तु डिजाइन ने चर और पूरे मॉडल को प्रयोक्ता परिभाषित चर नाम के साथ एक दूसरे को सन्दर्भित करने में सक्षम बनाया और बहुआयामी विश्लेषण को और बड़े पैमाने के आसानी से संपादित किये जाने योग्य समेकन को प्रदर्शित किया।

स्प्रेडशीट, जिसमें अंकगणित अभिव्यक्ति के बजाय तार्किक अभिव्यक्ति पर आधारित सूत्र भाषा है, उन्हें तार्किक स्प्रेडशीट कहते हैं। ऐसे स्प्रेडशीट्स को उनके कक्ष मान के बारे में निगमनात्‍मक तरीके से तर्क देने के लिए इस्तेमाल किया जा सकता है।

ठीक जैसे आरंभिक प्रोग्रामिंग भाषाओं को स्प्रेडशीट प्रिंटआउट्स उत्पन्न करने के लिए डिज़ाइन किया गया था, प्रोग्रामिंग तकनीकें स्वयं इतनी विकसित हो गई हैं कि वे आंकड़ों की तालिकाओं को कंप्यूटर में ही अधिक कुशलतापूर्वक संसाधित (स्प्रेडशीट या मेट्रिसेस के रूप में भी ज्ञात) कर सकती हैं।

विकास करते हुए स्प्रेडशीट ने VBA जैसी शक्तिशाली प्रोग्रामिंग भाषाओं का उपयोग करना शुरू किया; विशेष रूप से, वे कार्यात्मक, दृश्यात्मक और बहु-प्रतिमान भाषाएं हैं।

कई लोग, समान अनुक्रमिक प्रोग्राम लिखने के बजाय स्प्रेडशीट्स में गणना करने के कार्य को आसान पाते हैं। ऐसा स्प्रेडशीट्स के दो गुणों के कारण है।

एक स्प्रेडशीट प्रोग्राम को सामान्य अभिकलन कार्यों के निष्पादन के लिए डिज़ाइन किया गया है जिसके लिए वह प्राथमिक संगठनकारी सिद्धांत के रूप में समय के बजाय स्थानिक संबंधों का प्रयोग करता है।. 

एक स्प्रेडशीट को एक गणितीय ग्राफ के रूप में देखना अक्सर सुविधाजनक होता है, जहां नोड हैं स्प्रेडशीट के कक्ष और किनारे हैं सूत्रों में निर्दिष्ट अन्य कक्षों के लिए सन्दर्भ. इसे अक्सर स्प्रेडशीट का निर्भरता ग्राफ कहा जाता है। कक्षों के बीच सन्दर्भ को स्थानिक अवधारणाओं का लाभ मिल सकता है जैसे सापेक्ष स्थिति और निरपेक्ष स्थिति, साथ ही साथ नामित स्थान, ताकि स्प्रेडशीट सूत्रों को समझना और प्रबंधित करना अधिक आसान हो सके.

स्प्रेडशीट, आमतौर पर स्वचालित रूप से कक्षों को अद्यतन करने का प्रयास करती है जब उन कक्षों को जिस पर वे निर्भर करते हैं बदल दिया गया है। आरंभिक स्प्रेडशीट में सरल तकनीकों का प्रयोग होता था जैसे एक विशेष क्रम में कक्षों का मूल्यांकन, लेकिन आधुनिक स्प्रेडशीट, निर्भरता ग्राफ से एक न्यूनतम पुन:संगणना क्रम की गणना करती है। बाद के स्प्रेडशीट में मानों को उत्क्रम में प्रसारित करने की एक सीमित क्षमता थी, जिससे वह स्रोत मानों को इस तरह बदलता था कि एक विशेष जवाब एक निश्चित कक्ष में पहुंच जाता था। चूंकि स्प्रेडशीट के कक्षा सूत्र आमतौर पर व्युत्क्रमणीय नहीं हैं, फिर भी, इस तकनीक का कुछ हद तक सीमित महत्व है।

कई अवधारणाएं, जो अनुक्रमिक प्रोग्रामिंग मॉडल में आम हैं, स्प्रेडशीट दुनिया में उनके हमरूप हैं। उदाहरण के लिए, अनुक्रमित लूप के अनुक्रमिक मॉडल को आम तौर पर समान सूत्रों के साथ कक्षा की एक तालिका के रूप में दर्शाया जाता है, (सिर्फ उन्ही कक्षा में बदलते हैं जिसे वे सन्दर्भित करते हैं).

जबकि स्प्रेडशीट मात्रात्मक मॉडलिंग में आगे बढने की ओर एक बड़ा कदम हैं, इनमें कमियां भी हैं। समग्र प्रयोक्ता लाभ के स्तर पर, स्प्रेडशीट में कई प्रमुख कमियां हैं, विशेष रूप से अल्फा न्यूमेरिक खानों के पतों के अमित्रवत होने से सम्बंधित.





स्प्रेडशीट्स के साथ जुडी अन्य समस्याओं में शामिल हैं:



जबकि डेस्कटॉप के लिए अंतः निर्मित और तीसरे पक्ष उपकरण जो इन कमियों, जागरूकता और उपयोग को संबोधित करता है आम तौर पर कम होते हैं।. इसका एक अच्छा उदाहरण है कि पूंजी बाजार पेशेवरों में से 55% को यह नहीं पता होता कि अपने स्प्रेडशीटों का लेखापरीक्षण कैसे होता है; केवल 6% ही तीसरे पक्ष समाधानों में निवेश करते हैं।



