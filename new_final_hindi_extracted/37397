यूज़र इंटरफ़ेस

मानव-मशीन अन्योन्यक्रिया के औद्योगिक डिज़ाइन क्षेत्र में यूज़र इंटरफ़ेस वह स्थल है जहां इंसान और मशीनों के बीच अन्योन्यक्रिया स्थापित होती है। यूज़र इंटरफ़ेस में एक इंसान और एक मशीन के बीच अन्योन्यक्रिया का लक्ष्य मशीन का प्रभावी संचालन, नियंत्रण और मशीन की प्रतिक्रिया है जिससे ऑपरेटर को प्रचालनात्मक निर्णय लेने में सहायता मिलती है। यूज़र इंटरफ़ेस की इस व्यापक अवधारणा के उदाहरणों में कंप्यूटर ऑपरेटिंग सिस्टम, हैंड टूल्स, भारी मशीनरी संचालन नियंत्रण और प्रक्रिया नियंत्रण शामिल हैं। यूज़र इंटरफ़ेस बनाते समय डिज़ाइन संबंधी आवश्यक बातें कर्मचारी परिस्थिति विज्ञान और मनोविज्ञान जैसी विधाओं से संबंधित या के रूप में शामिल होती हैं।

एक यूज़र इंटरफ़ेस वह प्रणाली है जिसके द्वारा लोगों (उपयोगकर्ता) की मशीन के साथ अन्योन्यक्रिया होती हैं। यूज़र इंटरफ़ेस में हार्डवेयर (भौतिक) और सॉफ्टवेयर (तार्किक) घटक शामिल होते हैं। विभिन्न सिस्टम के लिए यूज़र इंटरफ़ेस होते हैं और ये माध्यम बनते हैं:

आम तौर पर मानव-मशीन अन्योन्यक्रिया इंजीनियरिंग का लक्ष्य ऐसे 
यूज़र इंटरफ़ेस का निर्माण करना है जो मशीन के संचालन को इस प्रकार आसान, कुशल और मनोरंजक बनाए कि वांछित परिणाम प्राप्त हों. आमतौर पर इसका मतलब है कि वांछित आउटपुट प्राप्त करने के लिए ऑपरेटर को न्यूनतम इनपुट देने की ज़रूरत होती है और मशीन भी मानव के लिए अवांछित आउटपुट कम कर देती है।

जब से व्यक्तिगत कंप्यूटर के प्रयोग में वृद्धि हुई है और भारी मशीनरी के संबंध में सामाजिक जागरूकता में गिरावट आई है, यूज़र इंटरफ़ेस के शब्द का प्रयोग (ग्राफ़ीय) यूज़र इंटरफ़ेस के रूप में अधिक होने लगा है जबकि औद्योगिक नियंत्रण पैनल और मशीनरी नियंत्रण डिज़ाइन विचार-विमर्श सामान्यतः मानव-मशीन इंटरफ़ेस का संदर्भ लेते हैं।

यूज़र इंटरफ़ेस के लिए अन्य शब्दों में शामिल हैं "मानव-कंप्यूटर इंटरफ़ेस" (HCI) और "मानव-मशीन इंटरफ़ेस" (MMI).

सिस्टम के साथ काम करने के लिए उपयोगकर्ताओं को सिस्टम की स्थिति को नियंत्रित करने व आकलन में सक्षम होना चाहिए. उदाहरण के लिए, मोटर चलाते समय एक चालक वाहन की दिशा नियंत्रण के लिए स्टीयरिंग व्हील का और गति नियंत्रण के लिए एक्सलरेटर पेडल, ब्रेक पेडल और गियरस्टिक का उपयोग करता है। चालक विंडशील्ड में से देखकर वाहन की स्थिति और स्पीडोमीटर पढ़कर वाहन की सटीक गति का अनुमान लगाता है। सकल रूप से "ऑटोमोबाइल का यूज़र इंटरफ़ेस" ऐसे यंत्रों का संयोजन है जिसके प्रयोग से चालक ड्राइविंग और वाहन के रख-रखाव के कार्यों को पूरा कर सकता है।

यूज़र इंटरफ़ेस और ऑपरेटर इंटरफ़ेस या मानव-मशीन इंटरफ़ेस में अंतर होता है।

इलेक्ट्रानिक उपकरणों के संदर्भ में होता है

यूज़र इंटरफ़ेस को कभी कभी मानव-मशीन इंटरफ़ेस (HMI) कहा जाता है। HMI मूल शब्द MMI (मानव-मशीन इंटरफ़ेस) का संशोधित रूप है। व्यवहार में, संक्षिप्त नाम MMI का प्रयोग अभी भी अक्सर किया जाता है हालांकि कुछ का दावा है कि MMI का तात्पर्य अब कुछ और है। एक और संक्षिप्त नाम HCI है लेकिन सामान्यतः इसका अधिक प्रयोग मानव-कंप्यूटर अन्योन्यक्रिया के लिए किया जाता है। अन्य इस्तेमाल होने वाले शब्द हैं ऑपरेटर इंटरफ़ेस कन्सोल (ओआईसी) और ऑपरेटर इंटरफ़ेस टर्मिनल (OIT). लेकिन यह संक्षिप्त है, शब्द 'परत' का उल्लेख करता है जो कि मशीन चलाने वाले इंसान को मशीन से अलग करती है।

कथा विज्ञान में कभी कभी HMI का प्रयोग प्रत्यक्ष न्यूरॉल इंटरफ़ेस के रूप में बेहतर वर्णित, के लिए किया जाता है।

कुछ परिस्थितियों में कंप्यूटर विशिष्ट आदेश के बिना ही उपयोगकर्ता का निरीक्षण कर, उनके कार्यों के अनुसार प्रतिक्रिया कर सकता है। शरीर के हिस्सों के मार्गन के लिए माध्यम की आवश्यकता होती है और सिर की स्थिति, टकटकी की दिशा इत्यादि को नोट करने वाले संवेदी का 
प्रयोगात्मक इस्तेमाल किया जाता रहा है। परालौकिक इंटरफ़ेस में यह विशेष रूप से प्रासंगिक है।

कुछ लेखक यूज़र इंटरफ़ेस को कंप्यूटर उपयोगकर्ता संतुष्टि का एक प्रमुख अंग मानते हैं।

यूज़र इंटरफ़ेस का डिज़ाइन उपयोगकर्ता द्वारा सिस्टम को इनपुट प्रदान करने, सिस्टम की आउटपुट की व्याख्या करने और इसे करने के लिए
सीखने में अपेक्षित प्रयास की मात्रा को प्रभावित करता है। जिस डिग्री तक विशेष यूज़र इंटरफ़ेस मानव मनोविज्ञान और उपयोगकर्ताओं के शरीर विज्ञान पर विचार करता है और सिस्टम के प्रयोग की प्रक्रिया को प्रभावी, कुशल व संतोषजनक बनाता है, वह प्रयोज्यता है।

प्रयोज्यता मुख्य रूप से यूज़र इंटरफ़ेस की एक विशेषता है लेकिन यह उत्पाद और इसे डिज़ाइन करने की प्रक्रिया की कार्यात्मकता से भी सम्बद्ध है। यह प्रयोग के संदर्भ में अपेक्षाओं के दृष्टिगत यह बताती है कि लक्षित उपयोगकर्ता कितनी दक्षता, प्रभावशीलता और संतुष्टि के साथ किसी उत्पाद का
इच्छित उद्देश्य के लिए इस्तेमाल कर सकते हैं।

कंप्यूटर विज्ञान और मानव-कंप्यूटर अन्योन्यक्रिया में ""यूज़र इंटरफ़ेस (एक कंप्यूटर प्रोग्राम का)" ग्राफ़ीय, शाब्दिक और श्रव्य जानकारी जो प्रोग्राम उपयोगकर्ता के लिए प्रस्तुत करता है और प्रोग्राम को नियंत्रित करने के लिए उपयोगकर्ता द्वारा लागू नियंत्रण श्रंखला (जैसे कंप्यूटर कीबोर्ड के साथ कीस्ट्रोक्स, कंप्यूटर माउस की हरकतें और टचस्क्रीन" के साथ चयन) को संदर्भित करता है।

वर्तमान में () यूज़र इंटरफ़ेस के निम्नलिखित प्रकार सबसे अधिक प्रचलन में हैं:
जीयूआई के उपवर्ग हैं जो इनपुट को स्वीकार करके इंटरनेट के माध्यम से प्रेषित और उपयोगकर्ता द्वारा वेब ब्राउज़र प्रोग्राम के प्रयोग से देखे जाने वाले वेब पेज का सृजन कर आउटपुट प्रदान करते हैं। नए निष्पादन, पारंपरिक HTML आधारित वेब ब्राउज़र की पुनश्चर्या की आवश्यकता को समाप्त करते हुए एक अलग प्रोग्राम में वास्तविक नियंत्रण प्रदान करने के लिए जावा, ऐजेक्स, एडोब फ्लेक्स, माइक्रोसॉफ्ट.नेट या इसी तरह की प्रौद्योगिकी का उपयोग करते हैं।
प्रक्रियाओं और मशीनों, स्वयं सेवी मशीनों आदि में बड़ी मात्रा में प्रयोग किए जाते हैं। 

डेस्कटॉप कंप्यूटिंग से परे विभिन्न क्षेत्रों में आम यूज़र इंटरफ़ेस:


यूज़र इंटरफ़ेस के अन्य प्रकार:
करते हैं।
उसे आदेश में रुपांतरित करते हैं, वर्तमान में एप्पल द्वारा विकसित किया जा रहा है।
अन्योन्यक्रिया में अक्सर लागू होता हैं।
उपयोगकर्ता की ज़रूरतों और इरादे का अनुमान लगाने के लिए निरीक्षण करता है।
इनपुट के अन्य रूप को स्वीकार करते हैं।
यह भी देखें:
पद्धतिरहित एक इंटरफ़ेस, जिसे दस्तावेज़ संपादित करने और प्रोग्रामिंग के लिए माउस प्रेरित यूज़र इंटरफ़ेस से अधिक कुशल माना गया है।

यूज़र इंटरफ़ेस के इतिहास को प्रमुख प्रकार के यूज़र इंटरफ़ेस के अनुसार निम्नलिखित चरणों में विभाजित किया जा सकता है:

एक अच्छे यूज़र इंटरफ़ेस का प्रमुख गुण निरंतरता है। एक उपयोगकर्ता को सतत अपेक्षाओं का सेट प्रदान करना और फिर उन अपेक्षाओं को पूरा करना बढ़िया यूज़र इंटरफ़ेस डिज़ाइन है। निरुद्देश्य प्रयुक्त निरंतरता बुरी भी हो सकती है जब उपयोगकर्ता को इससे कोई लाभ न हो.

निरंतरता के तीन महत्वपूर्ण पहलू हैं।

सबसे पहले, विभिन्न सुविधाओं के लिए नियंत्रण एक ही तरीके से प्रस्तुत किये जाने चाहिए ताकि उपयोगकर्ताओं को नियंत्रण आसानी से मिल जाएं उदाहरण के लिए, उपयोगकर्ताओं को सॉफ्टवेयर का प्रयोग करना तब मुश्किल लगता है जब कुछ आदेश मेनू, कुछ प्रतीक, कुछ दाएं क्लिक के माध्यम से उपलब्ध होते हैं, कुछ स्क्रीन के एक कोने पर एक अलग बटन के नीचे, कुछ काम के आधार पर समूहीकृत, कुछ "आम" द्वारा वर्गीकृत, कुछ "उन्नत" के आधार पर समूहीकृत होते हैं। किसी आदेश को खोज रहे उपयोगकर्ता के पास सतत खोज रणनीति होनी चाहिए. जितनी अधिक खोज रणनीतियां होंगी उपयोगकर्ता के लिए खोज उतनी ही और अधिक निराशाजनक होगी. जितना अधिक सतत समूहीकरण उतनी ही आसान खोज.

दूसरा, "कम से कम विस्मय का सिद्धांत" महत्वपूर्ण है। विभिन्न सुविधाएं एक ही तरीके से काम करनी चाहिएं. उदाहरण के लिए, एडोब एक्रोबैट में कुछ विशेषताएं हैं "टूल का चयन करें फिर जिस पर लागू करना हैं उस पाठ्य वस्तु का चयन करें." अन्य हैं "पाठ्य वस्तु का चयन करें, तब चयनित के लिए कार्रवाई लागू करें." . सभी संदर्भों में आदेश उसी तरह काम करने चाहिएं.

तीसरा, यूज़र इंटरफ़ेस के प्रति निरंतरता सलाह संस्करण-प्रति-संस्करण परिवर्तित होती है। परिवर्तन कम से कम होना चाहिए और आगे की अनुकूलता बनाई रखी जानी चाहिए. उदाहरण के लिए, माइक्रोसॉफ़्ट ऑफ़िस 2003 में मेनू बार से 
माइक्रोसॉफ़्ट ऑफ़िस 2007 में रिबन टूलबार में बदलने से पुनर्डिज़ाइन को मिश्रित प्रतिक्रिया मिली जिसका उद्देश्य सर्वाधिक प्रयुक्त कार्यों को सुलभ कराना था। कहा गया कि इससे "गुस्सा और कुंठा" उत्पन्न हुए और "समय, प्रशिक्षण और लागत 
में प्रमुख प्रयास" लगे. बिजली उपयोगकर्ताओं ने कहा कि नए इंटरफ़ेस को "सीखने के लिए बहुत समय और धैर्य लगता है।" एक्सेल उपयोगकर्ता समूह द्वारा एक ऑनलाइन सर्वेक्षण ने बताया कि परिवर्तन के प्रति लगभग 80% उत्तरदाताओं की राय नकारात्मक थी और इस 80% में
उत्पादकता में स्व-अनुमानित कमी "करीब 35%" थी।

यूज़र इंटरफ़ेस डिज़ाइन में निरंतरता सकल नहीं बल्कि एक गुण है लेकिन सबसे महत्वपूर्ण में से एक है। कुछ मामलों में, निरंतरता सिद्धांतों का उल्लंघन पर्याप्त स्पष्ट लाभ प्रदान कर सकता है और एक बुद्धिमान और सावधान यूज़र इंटरफ़ेस डिज़ाइनर कुछ अन्य महत्वपूर्ण लक्ष्य प्राप्त करने के लिए निरंतरता का उल्लंघन कर सकता है। आम तौर पर, कम परिपक्व सॉफ्टवेयर के कम यूज़र होते हैं जो यथापूर्व स्थिति में ही डूबे हैं। पुराने और अधिक विस्तृत रूप से प्रयुक्त सॉफ्टवेयर को विघटनकारी लागत से बचने के लिए यथापूर्व स्थिति को अधिक ध्यान से दूर करना चाहिए. सबसे अनुभवी उपयोगकर्ता और जो एक प्रोग्राम से सबसे अधिक लाभ प्राप्त करते हैं, ये वे उपयोगकर्ता हैं जो बदलने पर सबसे बड़ा खर्च वहन करते हैं। हालांकि, ऐसे आदान-प्रदान में निरंतरता सबसे महत्वपूर्ण मूल सिद्धांतों में से एक है और इसका यह कम से कम उल्लंघन किया जाना चाहिए. बेकार यूज़र इंटरफ़ेस डिज़ाइन और एक मौजूदा यूज़र इंटरफ़ेस पर खराब तरह से लागू परिवर्तन की लागत उपयोगकर्ताओं पर भारी पड़ सकती हैं।

जिन अलग अलग तरीकों से उपयोगकर्ता किसी उत्पाद का उपयोग कर सकते 

हैं यूआई डिज़ाइन में उनका वर्णन करने के लिए दो शब्दों का उपयोग किया जाता है। "रुपात्मकता" एक ही उत्पाद के कई वैकल्पिक इंटरफ़ेस को संदर्भित करती है जबकि "पद्धति" उसी इंटरफ़ेस की विभिन्न स्थितियों का वर्णन करता है।

इनपुट और आउटपुट ले जाने के लिए यूज़र इंटरफ़ेस द्वारा लागू संप्रेषण का पथ रुपात्मकता है। रूपात्मकता के उदाहरण हैं:
उपयोगकर्ता को अन्योन्यक्रिया के लिए चयन की अनुमति देते हुए यूज़र इंटरफ़ेस कई अनावश्यक इनपुट और आउटपुट रुपात्मकता को लागू कर सकता है।

एक मोड एक कंप्यूटर प्रोग्राम में संचालन का अलग तरीका है जिसमें कंप्यूटर प्रोग्राम की स्थिति के आधार पर एक ही इनपुट अलग कथित परिणाम उत्पन्न कर सकते हैं। उदाहरण के लिए, कैप्स लॉक्स ऐसे इनपुट मोड को शुरू कर देता है 
जिसमें टाइप किए हुए अक्षर डिफ़ॉल्ट से अपरकेस में होंगे और कैप्स लॉक्स
मोड में न होने पर उसी टाइपिंग से अक्षर लोअरकेस में होंगे. पद्धति का भारी उपयोग अक्सर यूज़र इंटरफ़ेस की प्रयोज्यता को कम कर देता है क्योंकि उपयोगकर्ता को वर्तमान मोड स्थिति और यथाआवश्यक मोड स्थिति के बीच बदलाव करना याद रखने का प्रयास करना पड़ता है।


