पी एच पी

PHP एक स्क्रिप्टिंग भाषा है, जो मूलतः डायनामिक वेब पेजों को बनाने के लिए डिजाईन की गई थी। यह एक कमांड लाइन इंटरफेस क्षमता को शामिल करने के लिए विकसित की गई है एवं स्टैंडअलोन ग्राफ़िकल एप्लिकेशन्स में इसका प्रयोग किया जा सकता है।

जहां PHP मूलतः रस्मुस लेर्दोर्फ़ द्वारा 1995 में बनाई गई थी, वहीं इसकी प्रमुख क्रियाविधि को अब The PHP Group ने निर्मित किया है, जो कोई औपचारिक विनिर्देश नहीं होने के कारण, PHP के लिए "वास्तविक" मानक के रूप में कार्य करता है। "PHP" मुफ़्त सॉफ्टवेयर है, जिसे PHP लाइसेंस के तहत जारी किया गया है, जो कि PHP शब्द के उपयोग पर प्रतिबंध होने के कारण, GNU जनरल पब्लिक लाइसेंस (GPL) के अनुकूल नहीं है।

PHP एक व्यापक रूप से प्रयुक्त सामान्य-उद्देश्य वाली स्क्रिप्टिंग भाषा है, जो विशेष रूप से वेब डेवलपमेंट के अनुकूल है और जिसे HTML के साथ जोड़ा जा सकता है। आम तौर पर यह वेब सर्वर पर चलती है, जिसकी संरचना PHP कोड को आगम की तरह लेने और वेब पेज कंटेंट को निर्गम की तरह देने के लिए की गई है। यह अधिकांश वेब सर्वरों और लगभग हर ऑपरेटिंग सिस्टम एवं प्लेटफॉर्म पर मुफ़्त में विस्तृत की जा सकती है। PHP 20 लाख से अधिक वेबसाइटों और 1 लाख वेब सर्वरों पर संस्थापित है। 

मूलतः "PHP" पर्सनल होम पेज का द्योतक था। 1994 में इसे कॉमन गेटवे इंटरफेस बाईनरीस के सेट के रूप में डैनीश/ग्रीनलैंडियन प्रोग्रामर रस्मुस लेर्दोर्फ़ द्वारा C प्रोग्रामिंग भाषा में लिखा गया। प्रारंभ में लेर्दोर्फ़ ने अपने व्यक्तिगत होम पेज के अनुरक्षणार्थ, पर्ल स्क्रिप्ट के सेट को बदलने के लिए ये पर्सनल होम पेज टूल्स बनाए. इन टूल्स का उपयोग उन्होंने अपने व्यक्तिगत संक्षिप्त विवरण को प्रदर्शित करने और यह जानने के लिए कि पेज पर कितना आवागमन हो रहा है, जैसे कार्यों के लिए किया। उन्होंने इन बाईनरीस को अपने फॉर्म इंटरप्रेटर के साथ मिलाकर PHP/FI बनाई, जिसकी कार्यात्मकता अधिक थी। PHP/FI में C प्रोग्रामिंग भाषा के लिए एक बड़ा कार्यान्वयन शामिल है और यह सरल एवं डायनामिक वेब एप्लीकेशनों के निर्माण को सक्रिय करके डाटाबेसों के साथ संप्रेषण कर सकती है। बग लोकेशन में तेज़ी और कोड में सुधार लाने के लिए लेर्दोर्फ़ ने 8 जून 1995 को सार्वजनिक तौर पर PHP जारी किया। इस निर्मोचन का नाम PHP संस्करण 2 दिया गया और इसकी बुनियादी कार्यक्षमता उतनी ही थी जितनी PHP की आज है। इसमे Perl-जैसे वेरिअबल, फॉर्म हैंडलिंग और HTML को अंतःस्थापित करने की क्षमता शामिल थी। वाक्य-विन्यास, Perl के जैसा ही, पर अधिक सीमित, सरल और असमान था।

टेक्नियन IIT में दो इज़राइली डेवलपर, ज़ीव सुरास्की और ऐंडी गुटमन्स ने 1997 में पदव्याख्यायित्र दुबारा लिखा और पुनरावर्ती संकेताक्षर "PHP: Hypertext Preprocessor" के रूप में नाम बदलते हुए PHP 3 का आधार तैयार किया। महीनों बीटा टेस्टिंग करने के बाद, डेवलपमेंट टीम ने आधिकारिक तौर पर PHP/FI 2 को नवम्बर 1997 में जारी किया। इसके बाद, PHP 3 का सार्वजनिक परीक्षण शुरू हुआ और जून 1998 में इसका आधिकारिक तौर पर प्रवर्तन किया गया। 1999 में जेंड इंजन बनाते हुए, सुरास्की और गुटमन्स ने PHP के महत्वपूर्ण अंश को नए सिरे से दुबारा लिखना शुरू किया। उन्होंने इज़राइल के रमत गन में जेंड टेक्नॉलजीस की स्थापना भी की.

22 मई 2000 को जेंड इंजन 1.0 की क्षमता के साथ PHP 4 को जारी किया गया। अगस्त, 2008 तक यह शाखा 4.4.9 संस्करण तक पहुंची है।PHP 4 अब विकासाधीन नहीं है और ना ही कोई सुरक्षा संबंधी सुधार जारी किए जाएंगे. 13 जुलाई 2004 को नए जेंड इंजन II की क्षमता वाले PHP 5 को जारी किया गया था। PHP 5 में ऑब्जेक्ट-ओरिएंटेड प्रोग्रामिंग के लिए उन्नत समर्थन, पीएचपी डाटा ऑब्जेक्ट्स एक्सटेंशन (जो डाटाबेस अभिगम हेतु हल्के और सुसंगत अंतःफलक को निरूपित करता है) और कई निष्पादन आवर्धन जैसी नई सुविधाएं शामिल थीं। अभी हाल ही में PHP समूह द्वारा जारी नवीकरण PHP 5.2.10 है।

2008 में, PHP 5 अकेला विकासाधीन सुव्यवस्थित संस्करण बना. PHP से लेट स्टेटिक बाईन्डिंग को हटा दिया गया है और 5.3 संस्करण में जोड़ दिया गया है।
PHP 5 के साथ-साथ PHP 6 विकासाधीन है। बड़े परिवर्तनों में codice_1, मेजिक कोट्स और सेफ़ मोड को हटाना शामिल हैं।
इन्हें हटाने का कारण था कि रजिस्टर_ग्लोबल्स, सुरक्षा में बाधक बन रहा था और मेजिक कोट्स के स्वभाव के बारे में पूर्वानुमान लगाना कठिन हो रहा था, जिससे बचना ही सही था। इसकी जगह, अक्षरों से बचने के लिए मेजिक कोट्स को addslashes() फंक्शन से, या और समुचित तौर पर MySQL के लिए mysql_real_escape_string जैसे डाटाबेस विक्रेता के लिए विशिष्टतः बने बचाव व्यवस्था से बदला जा सकता था। पीएचपी 6 में हटाए जाने वाले फ़ंक्शन को PHP 5.3 में अनुचित समझे गए और प्रयुक्त किए जाने पर चेतावनी देंगे.

PHP 4 से PHP 5 में परिवर्तन करने के लिए बढ़ावा देने वाले PHP डेवलपर्स के एक संघ की पहल GoPHP5 के कारण यथा 5 फ़रवरी 2008, कई उच्च प्रोफ़ाइल वाले ओपन सोर्स प्रोजेक्टों ने नए कोड में PHP 4 को समर्थन देना बंद कर दिया.

सम्प्रति PHP में यूनिकोड या मल्टी बाईट स्ट्रिंग्स के लिए देसी समर्थन उपलब्ध नहीं है; PHP 6 में यूनिकोड समर्थन शामिल किया जाएगा और उसमें ग़ैर-ASCII अक्षरों को शामिल करने के लिए स्ट्रिंग के साथ-साथ क्लास, मेथड और फ़ंक्शन नाम भी अनुमत करेगा.

यह 32-बिट और 64-बिट, दोनों परिवेशों में काम करता है, लेकिन Windows पर केवल 32-बिट का आधिकारिक वितरण है, जिसके लिए 64 बिट विंडोज़ परिवेश में IIS का उपयोग करते समय 32-बिट सुसंगत विधि को समर्थ बनाने की आवश्यकता है। PHP 5.3.0 के मामले में प्रयोगात्मक x64 बिट संस्करण उपलब्ध हैं।

PHP एक सामान्य-उद्देश्य की स्क्रिप्टिंग भाषा है, जो कि विशेष रूप से वेब डेवलपमेंट के अनुकूल है। आम तौर पर PHP वेब सर्वर पर चलती है। सामान्यतः डायनामिक वेब पेज कंटेंट बनाते समय, किसी भी अपेक्षित फ़ाइल में कोई भी PHP कोड, PHP रन टाइम के द्वारा कार्यान्वित होता है। इसका इस्तेमाल, कमांड-लाइन स्क्रिप्टिंग और क्लाइंट-साइड जीयूआई अनुप्रयोगों के लिए भी किया जा सकता है। PHP लगभग सभी वेब सर्वरों, कई ऑपरेटिंग सिस्टम और प्लेटफ़ॉर्म पर विस्तृत की जा सकती है और इसका इस्तेमाल कई संबंधपरक डाटाबेस प्रबंधन प्रणालियों में किया जा सकता है। यह निःशुल्क उपलब्ध है और PHP समूह, उपयोगकर्ताओं के अपने स्वयं के उपयोगार्थ; निर्माण, मनपसंद तरीक़े से बनाने और विस्तृत करने के लिए पूरा स्रोत कोड प्रदान करता है।

PHP मुख्यतः एक फ़िल्टर के रूप में कार्य करता है, पाठ और/या PHP निर्देश युक्त फ़ाइल या स्ट्रीम से इनपुट लेकर, बतौर आउटपुट डाटा की एक अन्य स्ट्रीम देती है; सामान्यतः आउटपुट HTML के रूप में होगा. PHP 4 के बाद से, पूर्ववर्ती इन्टरर्प्रेटर को बेहतर बनाते हुए जेंड इंजन द्वारा प्रोसेसिंग के लिए PHP पदव्याख्यायित्र, इनपुट को संकलित करके बाईटकोड बनाता है।

मूलतः डायनामिक वेब पेज बनाने के लिए अभिकल्पित PHP अब मुख्य रूप से सर्वर-साइड स्क्रीप्टिंग पर केंद्रित है, और अन्य सर्वर-साइड स्क्रिप्टिंग भाषाओं के समान है, जो कि वेब सर्वर से एक आश्रित को माइक्रोसॉफ्ट एक्टिव सर्वर पेज, सन माइक्रोसिस्टम्स जावा सर्वर पेज और मोड-पर्ल जैसे डायनामिक कंटेंट प्रदान करती हैं। PHP ने कई फ़्रेमवर्क्स के विकास को भी आकर्षित किया है जो रेपिड एप्लीकेशन डेवलपमेंट(RAD) को आगे बढ़ाने के लिए बिल्डिंग ब्लॉक और डिज़ाइन स्ट्रक्चर उपलब्ध कराता है। अन्य वेब एप्लीकेशन फ़्रेमवर्क्स के समान सुविधाएँ देते हुए, इनमें शामिल हैं - CakePHP, Symfony, CodeIgniter और ज़ेड फ्रेमवर्क.

वेब अनुप्रयोगों को विस्तृत करने के उपाय के तौर पर LAMP तथा WAMP संरचनाएं वेब उद्योग में लोकप्रिय हो गए हैं। Linux, Apache और MySQL के साथ सामान्यतः P भी इस ढेर में प्रयुक्त होता है, हालांकि Python या "perl" के लिए P का उल्लेख किया जा सकता है।

यथा अप्रैल 2007, 20 लाख से अधिक इंटरनेट डोमेन PHP स्थापन के साथ सर्वर पर आतिथेय बने हैं और mod_php को सर्वाधिक लोकप्रिय Apache module के रूप में दर्ज किया गया है।
महत्वपूर्ण वेब साइट PHP में लिखे और जोड़े गए हैं, जैसे फ़ेसबुक, विकिपीडिया (मीडियाविकी), याहू!, माई इयर बुक, डिग्ग, जूमला, वर्डप्रेस, यूट्यूब.

कई अन्य स्क्रिप्टिंग भाषाओं की तरह, PHP स्क्रिप्ट को भी प्रोडक्शन वेब सर्वेरों पर सामान्य रूप से मानव पठनीय स्रोत कोड के रूप में ही रखा जाता है। इस मामले में, PHP स्क्रिप्टों को PHP इंजन द्वारा रन टाइम पर संकलित किया जाएगा, जो उनके निष्पादन की गति को बढ़ा देता है। अन्य प्रोग्रामिंग भाषाओं जैसे 'C' (जिसमें PHP भाषा और उसके एक्सटेंशन लिखे गए हैं) के समान PHP कम्पाइलरों के उपयोग से रन टाइम से पहले संकलित करने में PHP स्क्रिप्ट सक्षम है।

कोड अनुकूलक का लक्ष्य होता है कि वे अपने आकार को कम करके और ऐसे अन्य परिवर्तनों द्वारा संकलित कोड की अभिकलन जटिलता को कम करें, ताकि निष्पादन में सुधार के कुल लक्ष्य के साथ निष्पादन समय को कम कर सकें. इस PHP कम्पाइलर की प्रकृति ऐसी है कि इनमें अक्सर कोड अनुकूलता के अवसर होते हैं, और कोड ऑप्टीमाइज़र का एक उदाहरण है जेंड ऑप्टीमाइज़र PHP एक्सटेंशन.

उच्च लोड PHP सर्वरों के ऊपरि प्रभार को कम करने का एक अन्य तरीक़ा PHP गतिवर्धकों का उपयोग रहा है। हर बार स्क्रिप्ट जब चले तब कोड की पार्सिंग और कम्पाइलिंग से बचने के लिए, साझा स्मृति में PHP स्क्रिप्ट के संकलित रूप के केशिंग द्वारा उल्लेखनीय निष्पादन लाभ की पेशकश कर सकते हैं।PHP 6 में एक PHP गतिवर्धक बनाया जाएगा.

कम्प्यूटर सॉफ्टवेयर में पाए गए सभी दोष, नेशनल वल्नेरेबिलिटी डाटाबेस स्टोर में संग्रहित होते हैं।
डाटाबेस में PHP संबंधित दोषों का समग्र अनुपात: 2004 में 20%, 2005 में 28%, 2006 में 43%, 2007 में 36% और 2008 में 35% रहा है। PHP से संबंधित इन अधिकांश दोषों का सुदूर अभिगम द्वारा दुरूपयोग हो सकता है: वे हैकर्स को वेबसर्वर (जैसे एक SQL डाटाबेस) से जुड़े डाटा स्रोतों के डाटा को चुराने या नष्ट करने, स्पैम भेजने या मालवेयर के इस्तेमाल से DOS हमलों में योगदान की अनुमति देते हैं, जिसे खुद संवेदनशील सर्वर पर स्थापित किया जा सकता है।

ये दोष अधिकतर प्रोग्रामिंग नियमों के श्रेष्ठ व्यवहारों का पालन नहीं करने से पैदा होते हैं: स्वयं भाषा या इसके महत्वपूर्ण अंश के संग्रहों में तकनीकी सुरक्षा संबंधी दोष कम ही पाए जाते हैं (2008 में 23, जो कुल का 1% है). 

यह स्वीकारते हुए कि प्रोग्रामरों पर भरोसा नहीं किया जा सकता, कुछ भाषाओं में इनपुट वेलिडेशन की कमी का स्वतः पता लगाने के लिए दोष जांच शामिल है, जिसने कई मुद्दों को प्रेरित किया है।
इस तरह की विशेषता PHP के लिए विकसित की जा रही है, लेकिन पहले कई बार इसे निर्मोचन शामिल करने से अस्वीकार किया जा चुका है।

इन सुरक्षा जोखिमों से निपटने के लिए, PHP अनुप्रयोगों को सर्वर पर होस्ट करते समय निरंतर ध्यान रखने और 
सावधान रहने की आवश्यकता है।
ये उन्नत सुरक्षा पैच हैं, जैसे विशेष रूप से वेब होस्टिंग परिवेश के लिए तैयार किए गए सुहोसिन और हार्डनिंग-पैच. अतिरिक्त सुरक्षा के लिए PHP को Apache module की बजाय एक CGI बाइनरी के रूप में संस्थापित करना, सही तरीका है।

PHP केवल अपनी परिसीमकों के भीतर कोड की पद-व्याख्या करता है। इसके परिसीमक के बाहर जो भी होता है वह सीधे निर्गम के लिए भेजा जाता है और PHP द्वारा पद-विन्यास नहीं होता है। सबसे आम परिसीमक हैं <?codice_2 और codice_3codice_4, जो क्रमशः खुले और बंद परिसीमक हैं। codice_5 और codice_6 परिसीमक भी उपलब्ध हैं। PHP कोड को शुरू करने के लिए छोटे टैग इस्तेमाल किए जा सकते हैं, codice_7 या codice_7codice_9 (जो एक स्ट्रिंग या वेरिएबल को echo back करने के लिए प्रयुक्त होता है) और PHP कोड को समाप्त करने का कोड है, codice_3codice_4 ये टैग सामान्य रूप से प्रयोग में लाए जाते हैं, लेकिन ASP-स्टाइल टैग (<% या <%= और %>) की तरह वे कम वहनीय हैं क्यूंकि PHP विन्यास में उनको निर्योग्य किया जा सकता है। इस कारण, छोटे टैग और ASP-स्टाइल टैग के प्रयोग को प्रोत्साहित नहीं किया जाता है। इन परिसीमकों का उद्देश्य PHP कोड को, HTML सहित, ग़ैर PHP कोड से अलग करना है।

परिसीमक का पहला रूप, codice_7codice_2 और codice_3codice_4, XHTML और अन्य XML दस्तावेज़ में सही ढंग से बने XML 'प्रसंस्करण निर्देश' निर्मित करता है। तात्पर्य यह कि PHP और अन्य मार्कअप के सम्मिलन से प्राप्त मिश्रण अच्छी तरह से गठित XML है। 

वेरिएबल एक डॉलर संकेत के साथ उपसर्ग के रूप में जुड़े होते हैं और एक टाइप को पहले से निर्दिष्ट करने की आवश्यकता नहीं है। फ़ंक्शन और क्लास नाम के विपरीत वेरिएबल नाम केस सेंसिटिव हैं। दोनों डबल-कोटेड (codice_16) और हेअरडॉक स्ट्रिंग्स परिसीमक के मान को स्ट्रिंग में अन्तःस्थापित करने की क्षमता को अनुमत करते हैं। PHP नई लाईन को फ़्री-फ़ार्म भाषा की तरह ख़ाली जगह मान कर व्यवहार करती है (सिवाय जब स्ट्रिंग, कोट के अंदर हो) और एक सेमीकोलन द्वारा कथनों को समाप्त कर दिया जाता है। PHP में तीन प्रकार के टिप्पणी वाक्य-विन्यास हैं: codice_17 ब्लॉक और इनलाइन टिप्पणी को इंगित करता है; codice_18 और codice_19 का प्रयोग एक लाइन की टिप्पणी के लिए किया जाता है। echo कथन PHP द्वारा आउटपुट टेक्स्ट को दी जाने वाली कई सुविधाओं में से एक है (जैसे वेब ब्राउज़र के लिए) 

मुख्य शब्दों और भाषा वाक्य-विन्यास के संदर्भ में, PHP सबसे उच्च स्तरीय भाषाओं के समान है, जो C शैली के वाक्य-विन्यास का पालन करते हैं।codice_20 शर्त रखता है, codice_21 और codice_22 लूप में ले जाते है और function return वाक्य-विन्यास में C, C++, Java और Perl के समान ही हैं। 

प्लेटफोर्म-अवलंबित अनुक्रम में PHP संपूर्ण अंकों को स्टोर करता है। यह अनुक्रम विशिष्ट रूप से 32-बिट चिह्नित पूर्णांक है अचिह्नित पूर्णांक कुछ ख़ास स्थितियों में चिह्नित मूल्यों में बदल दिए जाते हैं; यह व्यवहार अन्य प्रोग्रामिंग भाषाओं से भिन्न है। पूर्णांक चर को दशमलव (सकारात्मक और नकारात्मक), अष्टाधारी, हेक्सादशमलव अंकन द्वारा निर्दिष्ट किया जा सकता है। चल बिन्दु संख्या भी एक प्लेटफोर्म-विशेष अनुक्रम में रखे जाते हैं। चल बिन्दु अंकन या वैज्ञानिक अंकन के दो रूपों के उपयोग द्वारा उनको निर्दिष्ट किया जा सकता है। PHP में देशी बूलियन टाइप मौजूद है जो Java और C++ के देशी बूलियन टाइप के समान है। बूलियन जैसे रूपांतरण नियम का प्रयोग कर के, ग़ैर शून्य मान की व्याख्या बतौर सही और शून्य की बतौर ग़लत की जाती है, जैसा कि Perl और C++ में होता है। रिक्त डाटा प्रकार एक चर का प्रतिनिधित्व करता है, जिसका कोई मूल्य नहीं है। इस रिक्त डाटा प्रकार में केवल "Null" मूल्य है। "संसाधन" प्रकार के चर, बाहरी स्रोतों से संसाधन के लिए संदर्भ का प्रतिनिधित्व करते हैं। ये विशिष्ट रूप के एक्स्टेंशन से फ़ंक्शन विशेष तौर पर निर्मित किए गए हैं और इन्हें उसी एक्स्टेंशन से फ़क्शन द्वारा संसाधित किया जा सकता है; उदाहरणों में फ़ाइल, छवि और डाटाबेस संसाधन शामिल हैं। सारणी, किसी भी प्रकार के तत्वों को, जिसे PHP संभाल सकती है, संसाधनों, वस्तुओं और अन्य सारणियों सहित रख सकती है। मूल्यों और हैशेस की सूचियों में, दोनों कुंजी और मूल्यों के साथ क्रम संरक्षित होता है और दोनों को आपस में मिलाया जा सकता है। PHP स्ट्रिंग का भी समर्थन करती है, जिसे एकल कोट, डबल कोट, या हियरडॉक वाक्य-विन्यास के साथ प्रयोग किया जा सकता है।

मानक PHP संग्रहालय (SPL) मानक समस्याओं को सुलझाने का प्रयास करता है और कुशल डाटा अभिगम अंतरफलक और वर्गों को क्रियान्वित करता है।

PHP के सैकड़ों आधार कार्य हैं और हज़ारों एक्सटेंशन के माध्यम से होते हैं। ये कार्य अच्छी तरह PHP साइट पर लिखित हैं, हालांकि, अंतर्निर्मित संग्रहालय में व्यापक किस्म के नामकरण रिवाज़ और असंगतताएं हैं। सम्प्रति PHP में थ्रेड प्रोग्रामिंग के लिए कोई प्रकार्य नहीं हैं। 

प्रकार्य, प्रथम-दर्जे के प्रकार्य नहीं हैं और सिर्फ़ अपने नाम से सीधे या प्रकार्य के नाम वाले एक चर द्वारा गत्यात्मक रूप से संदर्भित हो सकते हैं।

PHP ने संवृत्ति के लिए समर्थन प्राप्त किया। वास्तविक अनाम प्रकार्य निम्नलिखित वाक्य-विन्यास के प्रयोग से समर्थित हैं:

यहाँ, getAdder() प्रकार्य पैरामीटर $क्ष (मुख्य शब्द "use", संदर्भ से चर प्राप्त करने पर मजबूर करता है) का उपयोग करते हुए एक संवृति का निर्माण करती है, जो अतिरिक्त तर्क $y को लेती है और कॉलर को वापस करती है। ऐसे प्रकार्य संग्रहित किए जा सकते हैं और इन्हें दूसरे प्रकार्यों के प्राचल के रूप में दिया जा सकता है। 
अधिक जानकारी के लिए Lambda प्रकार्य और संवृति RFC देखें.

मूल उद्देश्य-उन्मुख प्रोग्रामिंग कार्यात्मकता PHP 3 में जोड़ी गई और PHP 4 में सुधारी गई। गुणों के समुच्चय को विस्तृत और निष्पादन को बढाते हुए PHP 5 के लिए उद्देश्य संचालन पूरी तरह से पुनः लिखा गया। PHP के पिछले संस्करणों में आदिम प्रकार से उद्देश्यों का संचालन हुआ। इस पद्धति की सबसे बड़ी खामी ये थी कि जब एक चर को चिह्नित या एक पद्धति के लिए एक पैरामीटर के रूप में सौंपा गया, तो पूरे उद्देश्य की प्रतिलिपि बन गई। नए दृष्टिकोण में, वस्तुओं को संचालन द्वारा और ना कि मान द्वारा संदर्भित करते हैं। PHP 5 ने abstract class और final class के साथ-साथ abstract method और final method सहित निजी और सुरक्षित सदस्य चर और विधियां शुरू की हैं। साथ ही अन्य उद्देश्य-उन्मुख भाषा जैसे C++ और एक मानक अपवाद संचालन मॉडल के समान, इसने निर्माणकर्ता और विनाशकर्ता को घोषित करने के लिए एक मानक तरीक़े को पेश किया। इसके अलावा, PHP 5 ने अंतरफलक को जोड़ा और एकाधिक अंतरफलकों को कार्यान्वित करने की अनुमति दी. उद्देश्यों को रन टाइम प्रणाली से मेल-मिलाप की अनुमति देने के लिए विशेष अंतरफलक मौजूद हैं। उद्देश्य कार्यान्वित करने वाले ArrayAccess को सारणी वाक्य-विन्यास के साथ प्रयोग कर सकते हैं और उद्देश्य क्रियान्वयन करने वाले आइटरेटर या आइटरेटरएग्रीगेट को codice_26 भाषा निर्माण के साथ. इस इंजन में कोई आभासी सारणी सुविधा नहीं है, इसलिए स्थैतिक चर, संकलन समय पर संदर्भ की बजाय एक नाम से बंधे हैं। 

यदि डेवलपर एक ऑब्जेक्ट की प्रति, आरक्षित शब्द "क्लोन" का उपयोग कर के बनाता है, ज़ेंड इंजन जाँच करेगा कि _clone() विधि परिभाषित की गई है या नहीं. अगर नहीं तो यह एक डिफ़ॉल्ट __clone() को कॉल करेगा, जो ऑब्जेक्ट के लक्षणों की प्रतिलिपि बनाएगा. यदि एक __clone() विधि परिभाषित की गई है, तो यह निर्मित ऑब्जेक्ट में आवश्यक गुण स्थापित करने के लिए जिम्मेदार होगा. सुविधा के लिए, इंजन एक प्रकार्य आपूरित करेगा, जो स्रोत ऑब्जेक्ट के गुणों को आयात करेगा, ताकि प्रोग्रामर स्रोत ऑब्जेक्ट की बाई-वेल्यु प्रतिकृति से शुरू कर सके और उन लक्षणों को बदले जिनका बदलना जरुरी है।

PHP में कोर निर्माण के साथ-साथ स्वतंत्र और खुले स्रोत संग्रहालय शामिल हैं। PHP एक FTP सर्वर, कई डाटा बेस सर्वर, अंतःस्थापित SQL संग्रहालय जैसे अंतःस्थापित PostgreSQL, MySQL और SQLite, LDAP सर्वर व अन्य तक पहुंचने के लिए अन्तस्थ मोड्यूल वाली एक मौलिक इंटरनेट-जागरूक प्रणाली है। C प्रोग्रामर से संबंधित कई प्रक्रियाएं जैसे वह जो stdio परिवार में हैं, मानक PHP बिल्ड में उपलब्ध है। PHP ने पारंपरिक रूप से "magic_quotes_gpc" और "magic_quotes_runtime" जैसी विशेषताओं का प्रयोग किया है, जो स्ट्रिंग्स में अक्षर लोप (') और उद्धरण (") से बचने का प्रयास करती हैं, इस धारणा के साथ कि उनका प्रयोग SQL इंजेक्शन हमले से बचने के लिए डाटाबेस में होगा. इससे यह भ्रम जनित होता है कि कौन-सा डाटा बच रहा है और कौन-सा नहीं और ऐसी समस्याएं, जब डाटा, डाटाबेस में इनपुट के रूप में प्रयुक्त नहीं होता और जब बचाव में प्रयुक्त होता है, पूरी तरह से सही नहीं है। कोड को सर्वर के बीच, जो मैजिक कोट का इस्तेमाल करते और नहीं करते हैं, पोर्टेबल बनाने के लिए, डेवलपर अपने कोड की प्रस्तावना में प्रयुक्ति के समय मैजिक कोट के प्रभाव को उलटने के लिए लेख दे सकते हैं। 

PHP डेवलपरों को PHP भाषा में कार्यक्षमता जोड़ने के लिए C में एक्सटेंशन लिखने के लिए अनुमति देता है। तत्पश्चात इनको PHP में संकलित किया जा सकता है या क्रिया-समय में गत्यात्मक रूप में डाला जा सकता है। एक्सटेंशन को Windows API, Unix-like ऑपरेटिंग सिस्टम पर प्रक्रिया प्रबंधन के लिए, मल्टीबाईट स्ट्रिंग्स (Unicode), cURL और कई लोकप्रिय संपीडन प्रारूप हेतु समर्थन जोड़ने के लिए लिखा गया है। कुछ और असामान्य विशेषताओं में शामिल हैं- इंटरनेट रिले चैट के साथ एकीकरण, छवियों और Adobe Flash सामग्री का गत्यात्मक निर्माण और वाक संश्लेषण भी. PHP एक्सटेंशन कम्युनिटी लाइब्रेरी (PECL) परियोजना PHP भाषा के एक्सटेंशन के लिए भंडार है।

ज़ेंड, प्रमाणित PHP डेवलपर बनने के लिए प्रोग्रामरों हेतु एक प्रमाणन-परीक्षा प्रदान करता है।


 in

PHP - हिन्‍दी भाषा में
