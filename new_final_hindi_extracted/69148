हेक्साडेसिमल (षोडश आधारी)

गणित और कंप्यूटर विज्ञान में, हेक्साडेसिमल (आधारांक , या हेक्स अर्थात् षोडश) एक स्थितीय अंक प्रणाली (पोजीशनल न्यूमरल सिस्टम) है जिसके एक मूलांक (रैडिक्स) या आधारांक (बेस) का मान 16 होता है। इसमें सोलह अलग-अलग प्रतीकों का इस्तेमाल होता है जिसमें 0 से 9 तक के प्रतीक शून्य से नौ तक के मानों को प्रदर्शित करते हैं और A, B, C, D, E, F (या वैकल्पिक रूप से a से f) तक के प्रतीक दस से पंद्रह तक के मानों को प्रदर्शित करते हैं। उदाहरण के लिए, हेक्साडेसिमल संख्या 2AF3 का मान दाशमिक संख्या प्रणाली में (2 × 16) + (10 × 16) + (15 × 16) + (3 × 16) या 10,995 के बराबर होता है।

प्रत्‍येक हेक्साडेसिमल अंक, चार बाइनरी अंकों (बिट्स) (जिसे "निबल" (nibble) भी कहा जाता है) का प्रतिनिधित्व करता है और हेक्साडेसिमल नोटेशन का उपयोग, कंप्यूटिंग एवं डिजिटल इलेक्ट्रॉनिक्स में बाइनरी कोडित मानों के एक मानव-अनुकूल प्रदर्शन के रूप में किया जाता है। उदाहरण के लिए, बाईट के मान 0 से 255 (दशमलव अंक) तक हो सकता है लेकिन इसके मानों को और सुविधाजनक ढ़ंग से 00 से लेकर FF तक वाले दो हेक्साडेसिमल अकों के रूप में प्रदर्शित किया जा सकता है। हेक्साडेसिमल का इस्तेमाल आम तौर पर कंप्यूटर मेमोरी एड्रेसों को दर्शाने के लिए भी किया जाता है।

जिन परिस्थितियों में रेफरेंस का अभाव होता है, उन परिस्थितियों में अन्य मूल अंकों (आधारांक) में व्यक्त की गई संख्याओं के साथ एक हेक्साडेसिमल संख्‍या अस्‍पष्‍ट और भ्रामक हो सकती है। स्‍पष्‍ट रूप से मानों को व्यक्त करने की कई पद्धतियां प्रचलित हैं। एक संख्‍यात्‍मक सबस्क्रिप्ट (जो खुद दशमलव अंक में लिखा हुआ होता है) मूल अंक को स्पष्ट रूप से व्यक्त कर सकता है: 159, दशमल 159 है; 159 हेक्साडेसिमल 159 है, जिसका मान 345 के बराबर होता है। अन्‍य लेखक एक पाठ सबस्क्रिप्ट, जैसे - 159 और 159, या 159 और 159, का इस्तेमाल करना पसंद करते हैं।

रेखीय पाठ प्रणालिय़ों, जैसे - अधिकांश कंप्यूटर प्रोग्रामिंग परिवेशों में इस्तेमाल की जानी वाली प्रणालियों, में विभिन्न प्रकार के तरीकों का आगमन हुआ है:
अक्षर अंकों के लिए लोअरकेस या अपरकेस का इस्तेमाल करने की कोई सार्वभौमिक परंपरा नहीं है और समुदाय के मानकों या परंपरा के माध्यम से विशेष परिवेशों में प्रत्येक का प्रचलन है या प्रत्येक को प्राथमिकता दी जाती है।

कंप्यूटरों के आरंभिक इतिहास में नौ से ऊपर के अंकों को प्रदर्शित करने के लिए "A" से लेकर "F" तक के अक्षरों का विकल्प सार्वभौमिक नहीं था। 1950 के दशक के दौरान, 10 से 15 तक के मानों को सूचित करने के लिए एक मैक्रोन कैरेक्टर ("¯") के साथ 0 से लेकर 5 तक के अंकों का इस्तेमाल करने पर कुछ प्रतिष्ठापन कार्य अनुकूल साबित हुए. बेंडिक्स जी-15 कंप्यूटर उपयोगकर्ता "U" से लेकर "Z" तक के अक्षरों का उपयोग करते थे। ब्रुकहैवेन नैशनल लैबोरेटरी के ब्रूस ए. मार्टिन A से F के इस्तेमाल के विकल्प को "हास्यास्पद" मानते थे और सीएसीएम (CACM) के सम्पादक को 1968 में लिखे गए एक पत्र में उन्होंने बिट लोकेशनों पर आधारित प्रतीकों के एक सम्पूर्ण नए समूह के इस्तेमाल का प्रस्ताव दिया जिसे पर्याप्त रूप से स्वीकार नहीं किया गया। 

दस से पंद्रह तक की मात्राओं को प्रदर्शित करने के लिए कोई पारंपरिक अंक उपलब्ध नहीं है—इनकी जगह अक्षरों का इस्तेमाल किया जाता है—और अधिकांश पश्चिमी यूरोपीय भाषाओं में दस से ऊपर के अंकों के लिए गैर-दशमलव नामों का अभाव है। अंग्रेजी में कई गैर-दशमलव घातों (प्रथम बाइनरी घात के लिए "जोड़ा", प्रथम वाइजेसिमल घात के लिए "स्कोर", प्रथम तीन द्विदशमलव घातों के लिए "दर्जन", "ग्रॉस" (12 दर्जन) और "ग्रेट ग्रॉस" (144 दर्जन) के लिए नामों की सुलभता के बावजूद कोई भी अंग्रेजी नाम हेक्साडेसिमल घातों (दशमलव 16, 256, 4096, 65536, ...) का वर्णन नहीं करता है।   कुछ लोग हेक्साडेसिमल संख्याओं के एक-एक अंक को एक फोन नंबर की तरह पढ़ते हैं: "4DA" को "फोर-डी-ए" पढ़ते हैं। हालांकि, "A (ए)" अक्षर "एट" (आठ) की तरह लगता है, "C (सी)" "थ्री" (तीन) की तरह लगता है और "D (डी)" बड़ी आसानी से "-ty" (टी) प्रत्यय की तरह लग सकता है: क्या यह "4D (4डी)" है या "forty (फोर्टी)" ? अन्य लोग नाटो (NATO) फोनेटिक अल्फाबेट 
का इस्तेमाल करके भ्रमित होने से बच जाते हैं: "4DA" "फोर-डेल्टा-अल्फ़ा" है; या ज्वाइंट आर्मी/नेवी फोनेटिक अल्फाबेट ("फोर-डॉग-एबल"); या इसी तरह की एक तदर्थ प्रणाली.
बाइनरी और हेक्साडेसिमल दोनों के लिए अंकों की गिनती करने की प्रणालियों की योजना बनाई गई है। 
आर्थर सी. क्लार्क ने दस अंगुलियों पर शून्य से लेकर 1023 तक गिनती करने के लिए अंगुली का इस्तेमाल करने की सुविधा प्रदान करके एक ऑन/ऑफ़ बिट के रूप में प्रत्येक अंगुली का इस्तेमाल करने का सुझाव दिया। FF (255) तक की गिनती करने के लिए इस्तेमाल होने वाली एक अन्य प्रणाली को दायीं तरफ दर्शाया गया है; यह बारह के गुणांकों (दर्जनों और ग्रॉस) में गिनती करने एक मौजूदा प्रणाली का एक विस्तृत रूप लगता है जिसका इस्तेमाल आम तौर पर दक्षिण एशिया और अन्य जगहों में किया जाता है।

हेक्साडेसिमल प्रणाली में ऋणात्मक संख्याओं को दशमलव प्रणाली की तरह ही व्यक्त किया जा सकता है: -42 को प्रदर्शित करने के लिए –2A और इसी तरह अन्य.

हालांकि, इसके बजाय कुछ लोग प्रोसेसर में इस्तेमाल किए जाने वाले सटीक बिट पैटर्न को व्यक्त करना पसंद करते हैं और हेक्साडेसिमल मानों को संकेतित मानों के रूप में ही सबसे अच्छी तरह संभाले जाने का विचार रखते हैं। इस तरह, ऋणात्मक संख्या -42 को एक 32-बिट सीपीयू (CPU) रजिस्टर में FFFF FFD6 के रूप में लिखा जा सकता है जिस प्रकार एक 32-बिट एफपीयू (FPU) रजिस्टर में C228 0000 के रूप में, या एक 64-बिट एफपीयू रजिस्टर में C045 0000 0000 0000 के रूप में लिखा जा सकता है (कुछ प्रदर्शन योजनाओं, 32-बिट गैर-एफपीयू उदाहरण में दो-दो-पूरक और एफपीयू उदाहरणों में संकेत-परिमाण को मान लेते हैं).

अधिकांश कंप्यूटर बाइनरी डेटा में फेर-बदल करते हैं, लेकिन एक अपेक्षाकृत छोटी बाइनरी (द्विआधारी) संख्या 
के लिए भी अनगिनत अंकों के साथ काम करना इंसानों के लिए मुश्किल है। यद्यपि अधिकांश इन्सान आधारांक सिस्टम से परिचित है, लेकिन फिर भी दशमलव की तुलना में हेक्साडेसिमल में बाइनरी का नक्षा बनाना काफी आसान है। 
इस उदाहरण 1111 को आधारांक दस में रूपांतरित कर देता है। चूंकि एक बाइनरी संख्या के प्रत्येक स्थान में 1 या 0 हो सकता है, इसलिए इसके मान को दायीं तरफ से इसकी स्थिति द्वारा बड़ी आसानी से निर्धारित किया जा सकता है:
इसलिए:

आश्चर्यजनक रूप से कम अभ्यास के साथ, एक चरण में 1111 को F में मैप करना आसान हो जाता है: हेक्साडेसिमल के प्रदर्शन की तालिका को देखें. दशमलव के बजाय हेक्साडेसिमल के इस्तेमाल से होने वाले लाभ की वजह से संख्या के आकार में तेज़ी से वृद्धि हो जाती है। जब संख्या बहुत बड़ी हो जाती है, तो इसे दशमलव में रूपांतरित करना बहुत कठिन हो जाता है। हालांकि, हेक्साडेसिमल की मैपिंग करने पर बाइनरी स्ट्रिंग को 4 अंकों वाले समूहों के रूप में मान्यता देना और प्रत्येक को एक एकल हेक्साडेसिमल अंक में मैप करना नगण्य हो जाता है।

यह उदाहरण दशमलव में एक बाइनरी संख्या के रूपांतरण को दिखाता है, प्रत्येक अंक को दशमलव मान में मैप करता है और परिणामों को जोड़ता है। 

इसकी तुलना हेक्साडेसिमल में किए गए रूपांतरण से करें, जहां चार अंकों वाले प्रत्येक समूह पर स्वतंत्रतापूर्वक विचार किया जा सकता है और प्रत्यक्ष रूप से रूपांतरित किया जा सकता है:

हेक्साडेसिमल से बाइनरी में किया जाने वाला रूपांतरण भी उतना ही प्रत्यक्ष होता है।

ऑक्टल (अष्टाधारी) प्रणाली को बाइनरी कंप्यूटर डेटा का प्रत्यक्ष सामना करने वाले लोगों के लिए एक साधन के रूप में भी इस्तेमाल किया जा सकता है। ऑक्टल डेटा को चार के बजाय तीन बिट्स प्रति कैरेक्टर के रूप में दर्शाता है।

जैसा कि सभी आधारांकों के साथ होता है, स्रोत आधारांक में पूर्णांक में भाग देकर और शेष संचालनों के द्वारा हेक्साडेसिमल में एक संख्या के प्रदर्शन को रूपांतरित करने के लिए एक सरल एल्गोरिथ्म होता है। सैद्धांतिक रूप से यह किसी भी आधारांक से संभव है लेकिन अधिकांश इंसानों के लिए केवल दशमलव और अधिकांश कंप्यूटरों के लिए केवल बाइनरी (जिसे कहीं अधिक कुशल तरीकों से रूपांतरित किया जा सकता है) को इस तरीके से बड़ी आसानी से संभाला जा सकता है।

चलिए b को हेक्साडेसिमल में प्रदर्शित करने वाली संख्या मान लेते हैं और hh...hh श्रृंखला को इस संख्या को प्रदर्शित करने वाले हेक्साडेसिमल अंक मान लेते हैं।


"16" को किसी अन्य आधारांक के साथ प्रतिस्थापित किया जा सकता है जो वांछनीय हो सकता है।

निम्नलिखित, स्ट्रिंग प्रदर्शन में किसी भी संख्या को एक हेक्साडेसिमल में रूपांतरित करने के लिए उपरोक्त एल्गोरिथ्म का एक जावास्क्रिप्ट (JavaScript) कार्यान्वयन है। इसका उद्देश्य उपरोक्त एल्गोरिथ्म का वर्णन करना है। तथापि, डेटा के साथ गंभीरतापूर्वक काम करने के लिए काफी हद तक बिटवाइज़ ऑपरेटरों के साथ काम करने की सलाह दी जा सकती है।

स्रोत आधारांक में प्रत्येक स्थान को इसके स्थान मान का हेक्साडेसिमल प्रदर्शन प्रदान करके और उसके बाद अंतिम प्रदर्शन प्राप्त करने के लिए जोड़ और गुणा करके भी रूपांतरण कार्य किया जा सकता है। 
अर्थात् B3AD संख्या को दशमलव संख्या में रूपांतरित करने के लिए कोई भी इस रूपांतरण को D (13), A (10), 3 (3) और B (11) में विभाजित कर सकता है और उसके 
बाद प्रत्येक दशमलव प्रदर्शन को 16 से गुणा करके अंतिम परिणाम प्राप्त कर सकता है, जहां 'p' दाएं से बाएं अनुकूल स्थिति है जो 0 से शुरू होता है। इस स्थिति में हमें 13*(16) + 10*(16) + 3*(16) + 11*(16) प्राप्त होता है जो दशमलव प्रणाली में 45997 के बराबर है।

ग्राफिकल यूजर इंटरफेस वाली सबसे आधुनिक कंप्यूटर प्रणालियां एक अंतर्निर्मित कैलकुलेटर यूटिलिटी प्रदान करती हैं जिसमें विभिन्न मूलांकों के बीच रूपांतरण करने की क्षमता होती है जिसमें आम तौर पर हेक्साडेसिमल भी शामिल होता है।

माइक्रोसॉफ्ट (Microsoft) विंडोज (Windows) में, कैलकुलेटर यूटिलिटी को वैज्ञानिक कैलकुलेटर मोड में सेट किया जा सकता है, जो मूलांक 16 (हेक्साडेसिमल), 10 (डेसिमल), 8 (ऑक्टल) और 2 (बाइनरी) के बीच रूपांतरण की अनुमति देता है; सबसे ज्यादा आम तौर पर प्रोग्रामरों द्वारा प्रयुक्त आधारांक. वैज्ञानिक मोड में, ऑन-स्क्रीन संख्यात्मक कीपैड में A से लेकर F तक हेक्साडेसिमल अंक शामिल होते हैं जो "हेक्स" का चयन करने पर सक्रिय हो जाते हैं। हेक्स मोड में, तथापि, विंडोज कैलकुलेटर केवल पूर्णांकों का समर्थन करता है।

जैसा कि अन्य संख्यात्मक प्रणालियों के साथ होता है, हेक्साडेसिमल प्रणाली का इस्तेमाल परिमेय संख्याओं को प्रदर्शित करने के लिए किया जा सकता है, हालांकि आवर्ती अंक आम होते हैं क्योंकि सोलह (10h) में केवल एक एकल अभाज्य गुणनखंड (दो) होता है:

जहां एक ओवरलाइन एक आवर्ती पद्धति को सूचित करता है।

किसी भी आधारांक के लिए, 0.1 (या "1/10") हमेशा उसके बराबर होता है जो अपनी खुद की संख्या प्रणाली में उस आधारांक मान के प्रदर्शन से विभाजित होता है: आधारांक 3 की गिनती 0, 1, 2, 10 (तीन) है। इस प्रकार, चाहे बाइनरी के लिए एक को दो से विभाजित किया जाए या हेक्साडेसिमल के लिए एक को सोलह से विभाजित किया जाए, इनमें से दोनों गुणनखण्डों को codice_48 ही लिखा जाता है। चूंकि मूलांक 16, एक पूर्ण वर्ग (4²) है, इसलिए हेक्साडेसिमल में व्यक्त गुणन खंड की विषम अवधि, अक्सर दशमलव में व्यक्त गुणन खण्डों से कहीं अधिक होती है और (नगण्य एकल अंकों के अलावा) कोई चक्रीय संख्या नहीं होती है। आवर्ती अंक तब प्रदर्शित होते हैं जब सबसे निचले पदों के हर में एक अभाज्य गुणन खंड होता है जो मूलांक में नहीं मिलता है; इस प्रकार, हेक्साडेसिमल नोटेशन (अंकन) का इस्तेमाल करते समय, हर के साथ सभी गुणन खंड, जो दो के घात नहीं हैं, आवर्ती अंकों (जैसे तीन और पांच वाले) के एक इनपरिमित स्ट्रिंग में परिणत हो जाते हैं। यह तर्कसंगत संख्याओं को प्रदर्शित करने के लिए हेक्साडेसिमल (और बाइनरी) को दशमलव की तुलना में कम सुविधाजनक बनाता है क्योंकि एक बहुत बड़ा भाग परिमित प्रदर्शन की सीमा के बाहर ही रह जाता है।

हेक्साडेसिमल में परिमित तौर पर प्रदर्शनीय सभी तर्कसंगत संख्याएं, दशमलव, डुओडेसिमल और सेक्साजेसिमल में भी परिमित तौर पर प्रदर्शनीय होती हैं: अर्थात्, अंकों की एक परिमित संख्या के साथ कोई भी हेक्साडेसिमल संख्या में अंकों की एक परिमित संख्या होती है जब इन्हें उन अन्य मूलानकों में व्यक्त किया जाता है। इसके विपरीत, केवल बाद वाले मूलानकों में परिमित तौर पर प्रदर्शनीय होने वाला एक गुणन खंड, हेक्साडेसिमल में परिमित तौर पर प्रदर्शनीय होता है। उदाहरण के लिए, दशमलव 0.1 हेक्साडेसिमल में अपरिमित आवर्ती प्रदर्शन 0.199999999999... से मेल खाता है। हालांकि, हेक्साडेसिमल, हर में दो के घात के साथ गुणन खण्डों को प्रदर्शित करने के लिए 12 और 60 मूलानकों से अधिक कुशल होता है (जैसे - दशमलव एक का सोलहवां भाग हेक्साडेसिमल में 0.1, डुओडेसिमल में 0.09, सेक्साजेसिमल में 0;3,45 और डेसिमल में 0.0625 होता है).

शायद सबसे व्यापक रूप से इस्तेमाल किए जाने वाले घात, दो के घात, आधारांक 16 का इस्तेमाल करके दिखाना ज्यादा आसान होता है। दो के पहले सोलह घातों को नीचे दिखाया गया है। 

चूंकि चार का वर्ग सोलह होता है इसलिए चार के घात का एक सम सरल सम्बन्ध होता है:

दो और चार का इस्तेमाल करते समय यह टेट्रेशन को और ज्यादा आसान भी बना देता है। 
2 = 2 = 10,
2 = 2 = 10000 और
2 = 2 = (1 के बाद 16384 शून्य).

"हेक्साडेसिमल" शब्द "हेक्सा-" और "-डेसिमल" शब्दों से मिलकर बना है जिसमें से हेक्सा- शब्द को यूनानी शब्द έξ (हेक्स) से लिया गया है जिसका इस्तेमाल "छः" के लिए किया जाता है और -डेसिमल शब्द "दसवां" के लिए इस्तेमाल होने वाले लैटिन शब्द से लिया गया है। वेबस्टर (Webster) का तीसरा नया अंतर्राष्ट्रीय ऑनलाइन "हेक्साडेसिमल" को सभी लैटिन "सेक्साडेसिमल" (जो आरंभिक बेंडिक्स प्रलेखन में देखने को मिलता है) के एक परिवर्तन के रूप में प्राप्त करता है। मेरियम-वेबस्टर कॉलेजिएट ऑनलाइन में "हेक्साडेसिमल" के लिए साक्ष्यांकित सबसे आरंभिक तिथि 1954 है जिसे अंतर्राष्ट्रीय वैज्ञानिक शब्दावली (आईएसवी (ISV)) सुरक्षित ढ़ंग से रख दिया गया है। यह मुक्त रूप से यूनानी और लैटिन संयोजन रूपों को समीश्रित करने के लिए आईएसवी (ISV) में आम है। "सेक्साजेसिमल" शब्द (आधारांक 60 के लिए) में लैटिन उपसर्ग रह जाता है। डोनाल्ड नुथ ने कहा है कि शब्द व्युत्पत्ति की दृष्टि से सही शब्द "सेनिडेनरी" है, जो "16 द्वारा समूहीकृत" के लिए इस्तेमाल होने वाले लैटिन शब्द से लिया गया है। ("बाइनरी", "टर्नरी" और "क्वाटर्नरी" शब्दों एक ही लैटिन रचना से लिया गया है और शब्द व्युत्पत्ति की दृष्टि से "दशमलव" अंकगणित के लिए सही शब्द "डर्नरी" है। ) श्वार्ट्जमैन के अनुसार सामान्य लाइटिंग वाक्यांशों से लिया गया प्रत्याशित रूप "सेक्साडेसिमल" होगा, लेकिन कंप्यूटर हैकर उस शब्द को छोटा करके "सेक्स" करने का प्रयत्न करेंगे। शब्द व्युत्पत्ति की दृष्टि से उचित यूनानी शब्द "हेक्साडेकाडिक" (हालांकि आधुनिक यूनानी भाषा में ज्यादातर "डेका-हेक्साडिक (δεκαεξαδικός)" का इस्तेमाल किया जाता है) होगा.

हेक्साडेसिमल का इस्तेमाल कभी-कभी प्रोग्रामर जोक में किया जाता है क्योंकि कुछ शब्दों का निर्माण केवल हेक्साडेसिमल अंकों का इस्तेमाल करके ही किया जा सकता है। इनमें से कुछ शब्द "डेड", "बीफ", "बेब" और उपयुक्त प्रतिस्थापन के साथ "कॉफी" हैं। चूंकि इन्हें प्रोग्रामर तुरंत पहचान सकते हैं, इसलिए डिबगिंग सेटअप कभी-कभी प्रोग्रामरों के लिए मेमोरी को चालू करते हैं ताकि प्रोग्रामरों को यह देखने में मदद मिल सके कि कब कोई काम चालू नहीं हुआ है। 
कुछ लोग संख्या के बाद एक H लगाते हैं यदि वे यह दिखाना चाहते हो कि इसे हेक्साडेसिमल में लिखा गया है। पुराने इंटेल असेम्बली सिंटेक्स में, ऐसा कभी-कभी होगा है।

यूनिवर्सल (Universal) माक-ओ (Mach-O) फाइलों और जावा (Java) क्लास फ़ाइल स्ट्रक्चर की एक जादुई संख्या इसका उदाहरण है जो "codice_49" है। एकल-अवसंरचना 32-बिट बड़े-अंत वाले माक-ओ फाइलों के शुरू में जादुई संख्या "codice_50" होती है। "codice_51" को कभी-कभी अप्रारंभीकृत मेमोरी में डाल दिया जाता है। माइक्रोसॉफ्ट विंडोज एक्सपी (Microsoft Windows XP) अपने बंद index.dat फाइलों को हेक्स कोड: "codice_52" से साफ़ करता है। विज़ुअल सी++ (Visual C++) रिमोट डिबगर टार्गेट सिस्टम के के टूटे हुए लिंक को दर्शाने के लिए "codice_53" का इस्तेमाल करता है।

टेस्ट हार्डवेयर के लिए अक्सर इस्तेमाल किए जाने वाले दो आम बिट पद्धतियां codice_54 और codice_55 हैं (उनके समतुल्य हेक्स मान क्रमशः 55h और AAh हैं). इनका इस्तेमाल "ऑफ" ('0') से "ऑन" ('1') या ऑन ('1') से ऑफ ('0') में फेर-बदल करने के लिए किया जाता है जब इन दो पद्धतियों में स्विच (फेर-बदल) किया जाता है। इन दो मानों का इस्तेमाल अक्सर महत्वपूर्ण पीसी सिस्टम सेक्टरों में "सिग्नेचरों" के रूप एक साथ किया जाता है (जैसे - हेक्स शब्द, codice_56 जो कम-अंत वाले सिस्टमों में 55h होता है जिसके बाद AAh होता है जिसे एक वैध मास्टर बूट रिकॉर्ड के अंत में ही होना चाहिए).

निम्न तालिका हेक्साडेसिमल में एक जोक को प्रदर्शित करता है:

प्रथम तीन को गुणा के रूप में रूपांतरित किया जाता है, लेकिन अंत में, "0x" 12 के हेक्साडेसिमल रूपांतरण का संकेत देता है, जिसका मान 18 होता है।

वर्णमाला (और इस प्रकट वे जिनका इस्तेमाल हेक्साडेसिमल में किया गया है) में केवल प्रथम छः अक्षरों वाले एक शब्द के उपयोग पर आधारित एक अन्य जोक है। ..

इस मामले में, जीवित न रहने वाली स्थिति के विपरीत, "मृत" शब्द एक हेक्साडेसिमल संख्या DEAD (57005 आधारांक 10) को संदर्भित करता है।

एक नुथ रिवार्ड चेक एक हेक्साडेसिमल, या $2.56 होता है।

दर्जन के समर्थन की तरह,
हेक्साडेसिमल को वरीयताप्राप्त अंक प्रणाली के रूप में प्रोत्साहित करने के लिए सामयिक प्रयास किए गए हैं। ये प्रयास आमतौर पर 
उच्चारण और/या प्रतीकविद्या को प्रस्तावित करते हैं। कभी कभी प्रस्ताव मानक उपायों को एक कर देता है
जिससे वे 16 के गुणक हो जाते हैं। 

मानक उपायों को एकीकृत करने का एक उदाहरण हेक्साडेसिमल समय है जो एक दिन को 16 से उपविभाजित कर देता है जिससे एक दिन में 16 "हेक्स घंटे" हो जाते हैं। 

आर्टिकल में इस्तेमाल किए जाने वाले अंकनों का सरल मूल 
